Notebook[{

Cell[CellGroupData[{
Cell["IGraph/M", "Title"],

Cell[TextData[{
 "use igraph from ",
 StyleBox["Mathematica",
  FontSlant->"Italic"]
}], "Subtitle"],

Cell[TextData[{
 "This notebook can (and should) be opened using the command ",
 Cell[BoxData[
  FormBox[
   RowBox[{"IGDocumentation", "[", "]"}], TraditionalForm]]],
 ". When opened like this, it cannot be saved, so feel free to re-evaluate \
cells and experiment."
}], "Text"],

Cell["\<\
The documentation is currently incompete. Contributions are welcome!\
\>", "Text"],

Cell[CellGroupData[{

Cell["Basic usage", "Section"],

Cell["The package can be loaded using", "Text"],

Cell[BoxData[
 RowBox[{"<<", "IGraphM`"}]], "Input"],

Cell[TextData[{
 "The list of included functions is below. Notice that their names always \
have the ",
 Cell[BoxData[
  FormBox["IG", TraditionalForm]]],
 " prefix. Click on the name of a function to see its usage message."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGraphM`*"}]], "Input"],

Cell[BoxData[
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["IGraphM`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["IGraphM`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["IGArticulationPoints",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGArticulationPoints", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGDyadCensus",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGDyadCensus", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLocalClusteringCoefficient",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGLocalClusteringCoefficient", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGAverageLocalClusteringCoefficient",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGAverageLocalClusteringCoefficient", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGEdgeBetweenness",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGEdgeBetweenness", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGMaximalCliques",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGMaximalCliques", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGBetweenness",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGBetweenness", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGEdgeBetweennessEstimate",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGEdgeBetweennessEstimate", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGMaximalCliquesCount",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGMaximalCliquesCount", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGBetweennessEstimate",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGBetweennessEstimate", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGFeedbackArcSet",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGFeedbackArcSet", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGMaximalIndependentVertexSets",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGMaximalIndependentVertexSets", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGBibliographicCoupling",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGBibliographicCoupling", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGGlobalClusteringCoefficient",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGGlobalClusteringCoefficient", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGMaximumCardinalitySearch",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGMaximumCardinalitySearch", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGBiconnectedComponents",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGBiconnectedComponents", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGGraphicalQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGGraphicalQ", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGMinSeparators",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGMinSeparators", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGBlissAutomorphismCount",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGBlissAutomorphismCount", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGIndependenceNumber",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGIndependenceNumber", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGMotifs",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGMotifs", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGBlissCanonicalGraph",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGBlissCanonicalGraph", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGIndependentVertexSets",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGIndependentVertexSets", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGMotifsEstimateTotalCount",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGMotifsEstimateTotalCount", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGBlissCanonicalLabeling",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGBlissCanonicalLabeling", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGInverseLogWeightedSimilarity",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGInverseLogWeightedSimilarity", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGMotifsTotalCount",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGMotifsTotalCount", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGBlissCanonicalPermutation",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGBlissCanonicalPermutation", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGIsoclass",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGIsoclass", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGraphM",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGraphM", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGBlissGetIsomorphism",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGBlissGetIsomorphism", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGIsomorphicQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGIsomorphicQ", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGRewire",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGRewire", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGBlissIsomorphicQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGBlissIsomorphicQ", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGJaccardSimilarity",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGJaccardSimilarity", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGRewireEdges",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGRewireEdges", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGChordalCompletion",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGChordalCompletion", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGKRegularGame",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGKRegularGame", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGSeedRandom",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGSeedRandom", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGChordalQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGChordalQ", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLADGetSubisomorphism",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGLADGetSubisomorphism", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGSubisomorphicQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGSubisomorphicQ", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGCliqueNumber",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGCliqueNumber", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLADSubisomorphicQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGLADSubisomorphicQ", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGTopologicalOrdering",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGTopologicalOrdering", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGCliques",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGCliques", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLargestCliques",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGLargestCliques", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGTriadCensus",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGTriadCensus", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGCloseness",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGCloseness", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLargestIndependentVertexSets",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGLargestIndependentVertexSets", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGVersion",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGVersion", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGClosenessEstimate",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGClosenessEstimate", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutCircle",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGLayoutCircle", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGVF2AutomorphismCount",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGVF2AutomorphismCount", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGCocitationSimilarity",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGCocitationSimilarity", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutFruchtermanReingold",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGLayoutFruchtermanReingold", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGVF2FindIsomorphisms",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGVF2FindIsomorphisms", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGConnectedQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGConnectedQ", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutFruchtermanReingold3D",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGLayoutFruchtermanReingold3D", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGVF2FindSubisomorphisms",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGVF2FindSubisomorphisms", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGData",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGData", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutGraphOpt",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGLayoutGraphOpt", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGVF2IsomorphicQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGVF2IsomorphicQ", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGDegreeSequenceGame",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGDegreeSequenceGame", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutKamadaKawai",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGLayoutKamadaKawai", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGVF2IsomorphismCount",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGVF2IsomorphismCount", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGDiceSimilarity",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGDiceSimilarity", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutKamadaKawai3D",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGLayoutKamadaKawai3D", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGVF2SubisomorphicQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGVF2SubisomorphicQ", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGDirectedAcyclicGraphQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGDirectedAcyclicGraphQ", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutRandom",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGLayoutRandom", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGVF2SubisomorphismCount",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGVF2SubisomorphismCount", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGDistanceMatrix",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGDistanceMatrix", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutSphere",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGLayoutSphere", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGWeaklyConnectedQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGWeaklyConnectedQ", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGDocumentation",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGDocumentation", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLCF",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {"IGLCF", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGWeightedClusteringCoefficient",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-c9f611d5-50ff-44e4-a31d-e9776938961f", {
            "IGWeightedClusteringCoefficient", "IGraphM`"}},
          ButtonNote->"IGraphM`"]}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.31666666666666665`]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]], "Print", "InfoCell"]
}, Open  ]],

Cell["Or just type a question mark followed by the symbol\[CloseCurlyQuote]s \
name:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGVersion"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGVersion[] returns the version of the igraph library in \
use.\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info-d69e2b3e-ccf5-493f-9997-0fc9eb15cff0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGVersion", "[", "]"}]], "Input"],

Cell[BoxData["\<\"IGraph/M 0.1.2\\nigraph 0.8.0-pre+1f7c4ea (Sep 14 \
2015)\\nMac OS X x86 (64-bit)\"\>"], "Output"]
}, Open  ]],

Cell[TextData[{
 "IGraph/M functions work directly with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s builtin Graph datatype. No new special graph datatype \
is introduced."
}], "Text"],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s take a look at a few examples. Let us first generate \
a graph using the builtin functions of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"RandomGraph", "[", 
   RowBox[{"BarabasiAlbertGraphDistribution", "[", 
    RowBox[{"100", ",", "2"}], "]"}], "]"}]}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
       38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55,
       56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73,
       74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
       92, 93, 94, 95, 96, 97, 98, 99, 100}, {
      Null, SparseArray[
       Automatic, {100, 100}, 0, {
        1, {{0, 16, 33, 37, 59, 63, 81, 85, 89, 97, 97, 104, 105, 117, 121, 
          124, 125, 126, 129, 136, 139, 144, 146, 149, 151, 151, 151, 151, 
          157, 160, 160, 161, 165, 165, 167, 171, 171, 171, 172, 173, 174, 
          175, 177, 179, 179, 180, 180, 184, 185, 185, 185, 185, 185, 188, 
          188, 188, 189, 190, 190, 190, 190, 191, 192, 192, 192, 193, 193, 
          193, 193, 194, 194, 195, 195, 195, 196, 196, 197, 197, 197, 197, 
          197, 197, 197, 197, 197, 197, 197, 197, 197, 197, 197, 197, 197, 
          197, 197, 197, 197, 197, 197, 197, 197}, {{2}, {3}, {8}, {10}, {
          11}, {16}, {19}, {26}, {32}, {43}, {45}, {52}, {71}, {84}, {91}, {
          100}, {3}, {4}, {5}, {6}, {12}, {14}, {17}, {37}, {47}, {50}, {
          51}, {57}, {58}, {60}, {61}, {66}, {80}, {4}, {7}, {18}, {19}, {
          5}, {6}, {8}, {11}, {13}, {17}, {18}, {24}, {30}, {32}, {41}, {
          44}, {46}, {51}, {55}, {56}, {59}, {64}, {67}, {82}, {88}, {96}, {
          9}, {39}, {45}, {74}, {7}, {12}, {20}, {22}, {25}, {27}, {28}, {
          49}, {52}, {62}, {74}, {77}, {85}, {86}, {89}, {92}, {93}, {97}, {
          10}, {21}, {55}, {72}, {9}, {13}, {15}, {30}, {14}, {15}, {21}, {
          23}, {26}, {37}, {81}, {95}, {20}, {27}, {28}, {48}, {70}, {76}, {
          79}, {69}, {16}, {34}, {40}, {46}, {49}, {54}, {65}, {77}, {78}, {
          85}, {95}, {97}, {22}, {34}, {42}, {66}, {36}, {72}, {90}, {38}, {
          23}, {58}, {78}, {90}, {24}, {62}, {64}, {67}, {75}, {98}, {99}, {
          29}, {35}, {68}, {25}, {38}, {44}, {63}, {98}, {29}, {43}, {31}, {
          36}, {69}, {83}, {99}, {39}, {40}, {53}, {73}, {76}, {80}, {31}, {
          33}, {73}, {35}, {33}, {42}, {65}, {71}, {87}, {94}, {53}, {59}, {
          68}, {75}, {41}, {63}, {57}, {70}, {47}, {81}, {48}, {54}, {89}, {
          50}, {60}, {84}, {88}, {92}, {56}, {61}, {82}, {93}, {100}, {91}, {
          96}, {79}, {87}, {86}, {83}, {94}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1}}]}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
z05ZK5k4+FuCnn8wAyPnXobqZ9Lxv/yq4pc=
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Arrowheads[0.], ArrowBox[{1, 2}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{1, 3}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{1, 8}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{1, 10}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{1, 11}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{1, 16}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{1, 19}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{1, 26}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{1, 32}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{1, 43}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{1, 45}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{1, 52}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{1, 71}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{1, 84}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{1, 91}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{1, 100}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{2, 3}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{2, 4}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{2, 5}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{2, 6}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{2, 12}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{2, 14}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{2, 17}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{2, 37}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{2, 47}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{2, 50}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{2, 51}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{2, 57}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{2, 58}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{2, 60}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{2, 61}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{2, 66}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{2, 80}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{3, 4}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{3, 7}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{3, 18}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{3, 19}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{4, 5}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{4, 6}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{4, 8}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{4, 11}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{4, 13}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{4, 17}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{4, 18}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{4, 24}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{4, 30}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{4, 32}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{4, 41}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{4, 44}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{4, 46}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{4, 51}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{4, 55}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{4, 56}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{4, 59}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{4, 64}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{4, 67}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{4, 82}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{4, 88}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{4, 96}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{5, 9}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{5, 39}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{5, 45}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{5, 74}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{6, 7}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{6, 12}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{6, 20}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{6, 22}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{6, 25}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{6, 27}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{6, 28}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{6, 49}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{6, 52}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{6, 62}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{6, 74}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{6, 77}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{6, 85}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{6, 86}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{6, 89}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{6, 92}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{6, 93}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{6, 97}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{7, 10}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{7, 21}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{7, 55}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{7, 72}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{8, 9}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{8, 13}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{8, 15}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{8, 30}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{9, 14}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{9, 15}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{9, 21}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{9, 23}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{9, 26}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{9, 37}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{9, 81}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{9, 95}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{11, 20}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{11, 27}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{11, 28}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{11, 48}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{11, 70}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{11, 76}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{11, 79}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{12, 69}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{13, 16}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{13, 34}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{13, 40}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{13, 46}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{13, 49}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{13, 54}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{13, 65}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{13, 77}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{13, 78}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{13, 85}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{13, 95}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{13, 97}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{14, 22}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{14, 34}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{14, 42}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{14, 66}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{15, 36}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{15, 72}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{15, 90}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{16, 38}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{17, 23}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{18, 58}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{18, 78}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{18, 90}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{19, 24}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{19, 62}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{19, 64}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{19, 67}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{19, 75}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{19, 98}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{19, 99}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{20, 29}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{20, 35}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{20, 68}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{21, 25}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{21, 38}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{21, 44}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{21, 63}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{21, 98}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{22, 29}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{22, 43}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{23, 31}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{23, 36}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{23, 69}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{24, 83}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{24, 99}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{28, 39}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{28, 40}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{28, 53}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{28, 73}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{28, 76}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{28, 80}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{29, 31}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{29, 33}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{29, 73}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{31, 35}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{32, 33}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{32, 42}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{32, 65}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{32, 71}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{34, 87}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{34, 94}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{35, 53}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{35, 59}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{35, 68}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{35, 75}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{38, 41}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{39, 63}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{40, 57}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{41, 70}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{42, 47}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{42, 81}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{43, 48}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{43, 54}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{45, 89}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{47, 50}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{47, 60}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{47, 84}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{47, 88}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{48, 92}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{53, 56}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{53, 61}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{53, 82}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{56, 93}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{57, 100}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{61, 91}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{62, 96}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{65, 79}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{69, 87}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{71, 86}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{74, 83}, 0.04315982622250676]}, 
         {Arrowheads[0.], ArrowBox[{76, 94}, 0.04315982622250676]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.04315982622250676], DiskBox[2, 0.04315982622250676], 
         DiskBox[3, 0.04315982622250676], DiskBox[4, 0.04315982622250676], 
         DiskBox[5, 0.04315982622250676], DiskBox[6, 0.04315982622250676], 
         DiskBox[7, 0.04315982622250676], DiskBox[8, 0.04315982622250676], 
         DiskBox[9, 0.04315982622250676], DiskBox[10, 0.04315982622250676], 
         DiskBox[11, 0.04315982622250676], DiskBox[12, 0.04315982622250676], 
         DiskBox[13, 0.04315982622250676], DiskBox[14, 0.04315982622250676], 
         DiskBox[15, 0.04315982622250676], DiskBox[16, 0.04315982622250676], 
         DiskBox[17, 0.04315982622250676], DiskBox[18, 0.04315982622250676], 
         DiskBox[19, 0.04315982622250676], DiskBox[20, 0.04315982622250676], 
         DiskBox[21, 0.04315982622250676], DiskBox[22, 0.04315982622250676], 
         DiskBox[23, 0.04315982622250676], DiskBox[24, 0.04315982622250676], 
         DiskBox[25, 0.04315982622250676], DiskBox[26, 0.04315982622250676], 
         DiskBox[27, 0.04315982622250676], DiskBox[28, 0.04315982622250676], 
         DiskBox[29, 0.04315982622250676], DiskBox[30, 0.04315982622250676], 
         DiskBox[31, 0.04315982622250676], DiskBox[32, 0.04315982622250676], 
         DiskBox[33, 0.04315982622250676], DiskBox[34, 0.04315982622250676], 
         DiskBox[35, 0.04315982622250676], DiskBox[36, 0.04315982622250676], 
         DiskBox[37, 0.04315982622250676], DiskBox[38, 0.04315982622250676], 
         DiskBox[39, 0.04315982622250676], DiskBox[40, 0.04315982622250676], 
         DiskBox[41, 0.04315982622250676], DiskBox[42, 0.04315982622250676], 
         DiskBox[43, 0.04315982622250676], DiskBox[44, 0.04315982622250676], 
         DiskBox[45, 0.04315982622250676], DiskBox[46, 0.04315982622250676], 
         DiskBox[47, 0.04315982622250676], DiskBox[48, 0.04315982622250676], 
         DiskBox[49, 0.04315982622250676], DiskBox[50, 0.04315982622250676], 
         DiskBox[51, 0.04315982622250676], DiskBox[52, 0.04315982622250676], 
         DiskBox[53, 0.04315982622250676], DiskBox[54, 0.04315982622250676], 
         DiskBox[55, 0.04315982622250676], DiskBox[56, 0.04315982622250676], 
         DiskBox[57, 0.04315982622250676], DiskBox[58, 0.04315982622250676], 
         DiskBox[59, 0.04315982622250676], DiskBox[60, 0.04315982622250676], 
         DiskBox[61, 0.04315982622250676], DiskBox[62, 0.04315982622250676], 
         DiskBox[63, 0.04315982622250676], DiskBox[64, 0.04315982622250676], 
         DiskBox[65, 0.04315982622250676], DiskBox[66, 0.04315982622250676], 
         DiskBox[67, 0.04315982622250676], DiskBox[68, 0.04315982622250676], 
         DiskBox[69, 0.04315982622250676], DiskBox[70, 0.04315982622250676], 
         DiskBox[71, 0.04315982622250676], DiskBox[72, 0.04315982622250676], 
         DiskBox[73, 0.04315982622250676], DiskBox[74, 0.04315982622250676], 
         DiskBox[75, 0.04315982622250676], DiskBox[76, 0.04315982622250676], 
         DiskBox[77, 0.04315982622250676], DiskBox[78, 0.04315982622250676], 
         DiskBox[79, 0.04315982622250676], DiskBox[80, 0.04315982622250676], 
         DiskBox[81, 0.04315982622250676], DiskBox[82, 0.04315982622250676], 
         DiskBox[83, 0.04315982622250676], DiskBox[84, 0.04315982622250676], 
         DiskBox[85, 0.04315982622250676], DiskBox[86, 0.04315982622250676], 
         DiskBox[87, 0.04315982622250676], DiskBox[88, 0.04315982622250676], 
         DiskBox[89, 0.04315982622250676], DiskBox[90, 0.04315982622250676], 
         DiskBox[91, 0.04315982622250676], DiskBox[92, 0.04315982622250676], 
         DiskBox[93, 0.04315982622250676], DiskBox[94, 0.04315982622250676], 
         DiskBox[95, 0.04315982622250676], DiskBox[96, 0.04315982622250676], 
         DiskBox[97, 0.04315982622250676], DiskBox[98, 0.04315982622250676], 
         DiskBox[99, 0.04315982622250676], 
         DiskBox[100, 0.04315982622250676]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]]]], "Output"]
}, Open  ]],

Cell[TextData[{
 "We can compute the betweenness centrality of each vertex using IGraph/M",
 StyleBox[" ...",
  FontSlant->"Italic"]
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGBetweenness", "[", "g", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "754.48282258677`", ",", "893.8660022725812`", ",", "113.6200937950938`", 
   ",", "1493.2256213085168`", ",", "173.26219686746`", ",", 
   "1119.1810220481275`", ",", "153.79792517424093`", ",", 
   "201.3206750121224`", ",", "304.57908648369164`", ",", 
   "9.616810966810968`", ",", "419.45809300348765`", ",", "85.3155844155844`",
    ",", "515.5711482961485`", ",", "145.35756816283137`", ",", 
   "107.38423520923521`", ",", "54.4018759018759`", ",", "84.6173382173382`", 
   ",", "119.05753968253968`", ",", "243.52357364857366`", ",", 
   "172.06360583860578`", ",", "162.20634540897692`", ",", 
   "90.26564860578017`", ",", "138.8566294816295`", ",", 
   "106.51890331890334`", ",", "25.0373191136349`", ",", 
   "15.465225929041715`", ",", "7.20995670995671`", ",", 
   "273.46229464979467`", ",", "72.83246475746473`", ",", "0.`", ",", 
   "46.23361915861917`", ",", "209.29529899924637`", ",", 
   "18.02419247419247`", ",", "127.77433261183263`", ",", 
   "99.17187395937398`", ",", "6.582936507936509`", ",", "9.613570639886428`",
    ",", "18.001309801309805`", ",", "51.61379176379173`", ",", 
   "38.981186868686876`", ",", "58.96309523809525`", ",", 
   "44.034086454481184`", ",", "61.68979492729494`", ",", 
   "27.939285714285713`", ",", "23.63102453102453`", ",", "0.`", ",", 
   "44.168519857335646`", ",", "15.199747474747474`", ",", 
   "11.28704906204906`", ",", "0.`", ",", "0.`", ",", "11.678968253968254`", 
   ",", "58.39686147186148`", ",", "11.99752886002886`", ",", 
   "9.675901875901877`", ",", "30.553262015762016`", ",", 
   "30.779148629148636`", ",", "8.283333333333333`", ",", 
   "43.056396381396375`", ",", "0.`", ",", "38.412465312465315`", ",", 
   "40.97779997779998`", ",", "7.365079365079364`", ",", "7.331457431457431`",
    ",", "29.108170995670996`", ",", "0.`", ",", "7.331457431457431`", ",", 
   "0.`", ",", "45.52352092352092`", ",", "6.9576479076479085`", ",", 
   "16.441341991341993`", ",", "9.49722222222222`", ",", "12.3640873015873`", 
   ",", "48.93982216613796`", ",", "21.897904872904874`", ",", 
   "53.34011544011543`", ",", "11.28704906204906`", ",", "9.316666666666668`",
    ",", "9.037301587301586`", ",", "10.463095238095237`", ",", 
   "7.806746031746031`", ",", "14.036324786324782`", ",", 
   "3.033333333333333`", ",", "7.973015873015873`", ",", "11.28704906204906`",
    ",", "16.053174603174604`", ",", "11.051190476190477`", ",", 
   "11.902777777777775`", ",", "13.769444444444444`", ",", 
   "6.583333333333334`", ",", "10.344047619047618`", ",", 
   "18.52857142857143`", ",", "7.561111111111112`", ",", "9.974242424242421`",
    ",", "16.224181374181374`", ",", "10.103968253968253`", ",", 
   "11.28704906204906`", ",", "15.840981240981238`", ",", "0.`", ",", 
   "8.863528138528137`"}], "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "... or using ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", and obtain the same result."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BetweennessCentrality", "[", "g", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "754.48282258677`", ",", "893.8660022725812`", ",", "113.6200937950938`", 
   ",", "1493.2256213085168`", ",", "173.26219686746`", ",", 
   "1119.1810220481275`", ",", "153.79792517424093`", ",", 
   "201.3206750121224`", ",", "304.57908648369164`", ",", 
   "9.616810966810968`", ",", "419.45809300348765`", ",", "85.3155844155844`",
    ",", "515.5711482961485`", ",", "145.35756816283137`", ",", 
   "107.38423520923521`", ",", "54.4018759018759`", ",", "84.6173382173382`", 
   ",", "119.05753968253968`", ",", "243.52357364857366`", ",", 
   "172.06360583860578`", ",", "162.20634540897692`", ",", 
   "90.26564860578017`", ",", "138.8566294816295`", ",", 
   "106.51890331890334`", ",", "25.0373191136349`", ",", 
   "15.465225929041715`", ",", "7.20995670995671`", ",", 
   "273.46229464979467`", ",", "72.83246475746473`", ",", "0.`", ",", 
   "46.23361915861917`", ",", "209.29529899924637`", ",", 
   "18.02419247419247`", ",", "127.77433261183263`", ",", 
   "99.17187395937398`", ",", "6.582936507936509`", ",", "9.613570639886428`",
    ",", "18.001309801309805`", ",", "51.61379176379173`", ",", 
   "38.981186868686876`", ",", "58.96309523809525`", ",", 
   "44.034086454481184`", ",", "61.68979492729494`", ",", 
   "27.939285714285713`", ",", "23.63102453102453`", ",", "0.`", ",", 
   "44.168519857335646`", ",", "15.199747474747474`", ",", 
   "11.28704906204906`", ",", "0.`", ",", "0.`", ",", "11.678968253968254`", 
   ",", "58.39686147186148`", ",", "11.99752886002886`", ",", 
   "9.675901875901877`", ",", "30.553262015762016`", ",", 
   "30.779148629148636`", ",", "8.283333333333333`", ",", 
   "43.056396381396375`", ",", "0.`", ",", "38.412465312465315`", ",", 
   "40.97779997779998`", ",", "7.365079365079364`", ",", "7.331457431457431`",
    ",", "29.108170995670996`", ",", "0.`", ",", "7.331457431457431`", ",", 
   "0.`", ",", "45.52352092352092`", ",", "6.9576479076479085`", ",", 
   "16.441341991341993`", ",", "9.49722222222222`", ",", "12.3640873015873`", 
   ",", "48.93982216613796`", ",", "21.897904872904874`", ",", 
   "53.34011544011543`", ",", "11.28704906204906`", ",", "9.316666666666668`",
    ",", "9.037301587301586`", ",", "10.463095238095237`", ",", 
   "7.806746031746031`", ",", "14.036324786324782`", ",", 
   "3.033333333333333`", ",", "7.973015873015873`", ",", "11.28704906204906`",
    ",", "16.053174603174604`", ",", "11.051190476190477`", ",", 
   "11.902777777777775`", ",", "13.769444444444444`", ",", 
   "6.583333333333334`", ",", "10.344047619047618`", ",", 
   "18.52857142857143`", ",", "7.561111111111112`", ",", "9.974242424242421`",
    ",", "16.224181374181374`", ",", "10.103968253968253`", ",", 
   "11.28704906204906`", ",", "15.840981240981238`", ",", "0.`", ",", 
   "8.863528138528137`"}], "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "Let us now assign weights to the edges. Many IGraph/M functions, including ",
 Cell[BoxData[
  FormBox["IGBetweenness", TraditionalForm]]],
 ", support edge weights."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wg", "=", 
   RowBox[{"SetProperty", "[", 
    RowBox[{"g", ",", 
     RowBox[{"EdgeWeight", "\[Rule]", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"1", ",", 
        RowBox[{"EdgeCount", "[", "g", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGBetweenness", "[", "wg", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1095.`", ",", "1632.`", ",", "572.`", ",", "2039.`", ",", "142.`", ",", 
   "1102.`", ",", "190.`", ",", "130.`", ",", "326.`", ",", "0.`", ",", 
   "283.`", ",", "477.`", ",", "479.`", ",", "431.`", ",", "11.`", ",", 
   "390.`", ",", "0.`", ",", "286.`", ",", "426.`", ",", "52.`", ",", "148.`",
    ",", "135.`", ",", "252.`", ",", "168.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "158.`", ",", "72.`", ",", "0.`", ",", "22.`", ",", "562.`", 
   ",", "0.`", ",", "94.`", ",", "126.`", ",", "7.`", ",", "0.`", ",", 
   "460.`", ",", "0.`", ",", "49.`", ",", "612.`", ",", "118.`", ",", "46.`", 
   ",", "0.`", ",", "34.`", ",", "0.`", ",", "349.`", ",", "25.`", ",", "0.`",
    ",", "0.`", ",", "0.`", ",", "0.`", ",", "178.`", ",", "103.`", ",", 
   "0.`", ",", "177.`", ",", "64.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "90.`", ",", "403.`", ",", 
   "252.`", ",", "0.`", ",", "433.`", ",", "0.`", ",", "0.`", ",", "59.`", 
   ",", "4.`", ",", "0.`", ",", "109.`", ",", "28.`", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "64.`", ",", "408.`", ",", "0.`", ",", "0.`", 
   ",", "19.`", ",", "14.`", ",", "69.`", ",", "2.`", ",", "18.`", ",", 
   "81.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "15.`"}], "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "Notice that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 10.2 does not include functionality to compute weighted betweenness. ",
 Cell[BoxData[
  FormBox[
   RowBox[{"BetweennessCentrality", "[", "]"}], TraditionalForm]]],
 " ignores the weights."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BetweennessCentrality", "[", "wg", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "754.48282258677`", ",", "893.8660022725812`", ",", "113.6200937950938`", 
   ",", "1493.2256213085168`", ",", "173.26219686746`", ",", 
   "1119.1810220481275`", ",", "153.79792517424093`", ",", 
   "201.3206750121224`", ",", "304.57908648369164`", ",", 
   "9.616810966810968`", ",", "419.45809300348765`", ",", "85.3155844155844`",
    ",", "515.5711482961485`", ",", "145.35756816283137`", ",", 
   "107.38423520923521`", ",", "54.4018759018759`", ",", "84.6173382173382`", 
   ",", "119.05753968253968`", ",", "243.52357364857366`", ",", 
   "172.06360583860578`", ",", "162.20634540897692`", ",", 
   "90.26564860578017`", ",", "138.8566294816295`", ",", 
   "106.51890331890334`", ",", "25.0373191136349`", ",", 
   "15.465225929041715`", ",", "7.20995670995671`", ",", 
   "273.46229464979467`", ",", "72.83246475746473`", ",", "0.`", ",", 
   "46.23361915861917`", ",", "209.29529899924637`", ",", 
   "18.02419247419247`", ",", "127.77433261183263`", ",", 
   "99.17187395937398`", ",", "6.582936507936509`", ",", "9.613570639886428`",
    ",", "18.001309801309805`", ",", "51.61379176379173`", ",", 
   "38.981186868686876`", ",", "58.96309523809525`", ",", 
   "44.034086454481184`", ",", "61.68979492729494`", ",", 
   "27.939285714285713`", ",", "23.63102453102453`", ",", "0.`", ",", 
   "44.168519857335646`", ",", "15.199747474747474`", ",", 
   "11.28704906204906`", ",", "0.`", ",", "0.`", ",", "11.678968253968254`", 
   ",", "58.39686147186148`", ",", "11.99752886002886`", ",", 
   "9.675901875901877`", ",", "30.553262015762016`", ",", 
   "30.779148629148636`", ",", "8.283333333333333`", ",", 
   "43.056396381396375`", ",", "0.`", ",", "38.412465312465315`", ",", 
   "40.97779997779998`", ",", "7.365079365079364`", ",", "7.331457431457431`",
    ",", "29.108170995670996`", ",", "0.`", ",", "7.331457431457431`", ",", 
   "0.`", ",", "45.52352092352092`", ",", "6.9576479076479085`", ",", 
   "16.441341991341993`", ",", "9.49722222222222`", ",", "12.3640873015873`", 
   ",", "48.93982216613796`", ",", "21.897904872904874`", ",", 
   "53.34011544011543`", ",", "11.28704906204906`", ",", "9.316666666666668`",
    ",", "9.037301587301586`", ",", "10.463095238095237`", ",", 
   "7.806746031746031`", ",", "14.036324786324782`", ",", 
   "3.033333333333333`", ",", "7.973015873015873`", ",", "11.28704906204906`",
    ",", "16.053174603174604`", ",", "11.051190476190477`", ",", 
   "11.902777777777775`", ",", "13.769444444444444`", ",", 
   "6.583333333333334`", ",", "10.344047619047618`", ",", 
   "18.52857142857143`", ",", "7.561111111111112`", ",", "9.974242424242421`",
    ",", "16.224181374181374`", ",", "10.103968253968253`", ",", 
   "11.28704906204906`", ",", "15.840981240981238`", ",", "0.`", ",", 
   "8.863528138528137`"}], "}"}]], "Output"]
}, Open  ]],

Cell["\<\
Let us delete the minimum feedback edge set to obtain an acyclic graph:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"acg", "=", 
  RowBox[{"EdgeDelete", "[", 
   RowBox[{"g", ",", 
    RowBox[{"IGFeedbackArcSet", "[", "g", "]"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
       38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55,
       56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73,
       74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
       92, 93, 94, 95, 96, 97, 98, 99, 100}, {
      Null, SparseArray[
       Automatic, {100, 100}, 0, {
        1, {{0, 16, 32, 34, 43, 45, 52, 54, 58, 60, 60, 67, 68, 68, 69, 70, 
          71, 72, 74, 81, 84, 84, 85, 86, 87, 87, 87, 87, 88, 88, 88, 88, 91, 
          91, 91, 91, 91, 91, 91, 92, 93, 93, 93, 94, 94, 95, 95, 95, 95, 95, 
          95, 95, 95, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 
          96, 96, 97, 97, 98, 98, 98, 98, 98, 99, 99, 99, 99, 99, 99, 99, 99, 
          99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 
          99}, {{2}, {3}, {8}, {10}, {11}, {16}, {19}, {26}, {32}, {43}, {
          45}, {52}, {71}, {84}, {91}, {100}, {4}, {5}, {6}, {12}, {14}, {
          17}, {37}, {47}, {50}, {51}, {57}, {58}, {60}, {61}, {66}, {80}, {
          7}, {18}, {41}, {44}, {46}, {55}, {56}, {59}, {82}, {88}, {96}, {
          39}, {74}, {25}, {49}, {77}, {85}, {92}, {93}, {97}, {21}, {72}, {
          9}, {13}, {15}, {30}, {81}, {95}, {20}, {27}, {28}, {48}, {70}, {
          76}, {79}, {69}, {34}, {36}, {38}, {23}, {78}, {90}, {24}, {62}, {
          64}, {67}, {75}, {98}, {99}, {29}, {35}, {68}, {43}, {31}, {83}, {
          73}, {33}, {42}, {65}, {63}, {57}, {54}, {89}, {61}, {87}, {86}, {
          94}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}]}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
t9WJ15lY6x/qqpHFxn8BbxSxiA==
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Arrowheads[0.], ArrowBox[{1, 2}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{1, 3}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{1, 8}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{1, 10}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{1, 11}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{1, 16}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{1, 19}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{1, 26}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{1, 32}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{1, 43}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{1, 45}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{1, 52}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{1, 71}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{1, 84}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{1, 91}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{1, 100}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{2, 4}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{2, 5}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{2, 6}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{2, 12}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{2, 14}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{2, 17}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{2, 37}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{2, 47}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{2, 50}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{2, 51}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{2, 57}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{2, 58}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{2, 60}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{2, 61}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{2, 66}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{2, 80}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{3, 7}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{3, 18}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{4, 41}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{4, 44}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{4, 46}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{4, 55}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{4, 56}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{4, 59}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{4, 82}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{4, 88}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{4, 96}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{5, 39}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{5, 74}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{6, 25}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{6, 49}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{6, 77}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{6, 85}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{6, 92}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{6, 93}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{6, 97}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{7, 21}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{7, 72}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{8, 9}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{8, 13}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{8, 15}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{8, 30}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{9, 81}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{9, 95}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{11, 20}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{11, 27}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{11, 28}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{11, 48}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{11, 70}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{11, 76}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{11, 79}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{12, 69}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{14, 34}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{15, 36}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{16, 38}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{17, 23}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{18, 78}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{18, 90}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{19, 24}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{19, 62}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{19, 64}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{19, 67}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{19, 75}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{19, 98}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{19, 99}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{20, 29}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{20, 35}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{20, 68}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{22, 43}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{23, 31}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{24, 83}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{28, 73}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{32, 33}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{32, 42}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{32, 65}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{39, 63}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{40, 57}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{43, 54}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{45, 89}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{53, 61}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{69, 87}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{71, 86}, 0.06764672337772318]}, 
         {Arrowheads[0.], ArrowBox[{76, 94}, 0.06764672337772318]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.06764672337772318], DiskBox[2, 0.06764672337772318], 
         DiskBox[3, 0.06764672337772318], DiskBox[4, 0.06764672337772318], 
         DiskBox[5, 0.06764672337772318], DiskBox[6, 0.06764672337772318], 
         DiskBox[7, 0.06764672337772318], DiskBox[8, 0.06764672337772318], 
         DiskBox[9, 0.06764672337772318], DiskBox[10, 0.06764672337772318], 
         DiskBox[11, 0.06764672337772318], DiskBox[12, 0.06764672337772318], 
         DiskBox[13, 0.06764672337772318], DiskBox[14, 0.06764672337772318], 
         DiskBox[15, 0.06764672337772318], DiskBox[16, 0.06764672337772318], 
         DiskBox[17, 0.06764672337772318], DiskBox[18, 0.06764672337772318], 
         DiskBox[19, 0.06764672337772318], DiskBox[20, 0.06764672337772318], 
         DiskBox[21, 0.06764672337772318], DiskBox[22, 0.06764672337772318], 
         DiskBox[23, 0.06764672337772318], DiskBox[24, 0.06764672337772318], 
         DiskBox[25, 0.06764672337772318], DiskBox[26, 0.06764672337772318], 
         DiskBox[27, 0.06764672337772318], DiskBox[28, 0.06764672337772318], 
         DiskBox[29, 0.06764672337772318], DiskBox[30, 0.06764672337772318], 
         DiskBox[31, 0.06764672337772318], DiskBox[32, 0.06764672337772318], 
         DiskBox[33, 0.06764672337772318], DiskBox[34, 0.06764672337772318], 
         DiskBox[35, 0.06764672337772318], DiskBox[36, 0.06764672337772318], 
         DiskBox[37, 0.06764672337772318], DiskBox[38, 0.06764672337772318], 
         DiskBox[39, 0.06764672337772318], DiskBox[40, 0.06764672337772318], 
         DiskBox[41, 0.06764672337772318], DiskBox[42, 0.06764672337772318], 
         DiskBox[43, 0.06764672337772318], DiskBox[44, 0.06764672337772318], 
         DiskBox[45, 0.06764672337772318], DiskBox[46, 0.06764672337772318], 
         DiskBox[47, 0.06764672337772318], DiskBox[48, 0.06764672337772318], 
         DiskBox[49, 0.06764672337772318], DiskBox[50, 0.06764672337772318], 
         DiskBox[51, 0.06764672337772318], DiskBox[52, 0.06764672337772318], 
         DiskBox[53, 0.06764672337772318], DiskBox[54, 0.06764672337772318], 
         DiskBox[55, 0.06764672337772318], DiskBox[56, 0.06764672337772318], 
         DiskBox[57, 0.06764672337772318], DiskBox[58, 0.06764672337772318], 
         DiskBox[59, 0.06764672337772318], DiskBox[60, 0.06764672337772318], 
         DiskBox[61, 0.06764672337772318], DiskBox[62, 0.06764672337772318], 
         DiskBox[63, 0.06764672337772318], DiskBox[64, 0.06764672337772318], 
         DiskBox[65, 0.06764672337772318], DiskBox[66, 0.06764672337772318], 
         DiskBox[67, 0.06764672337772318], DiskBox[68, 0.06764672337772318], 
         DiskBox[69, 0.06764672337772318], DiskBox[70, 0.06764672337772318], 
         DiskBox[71, 0.06764672337772318], DiskBox[72, 0.06764672337772318], 
         DiskBox[73, 0.06764672337772318], DiskBox[74, 0.06764672337772318], 
         DiskBox[75, 0.06764672337772318], DiskBox[76, 0.06764672337772318], 
         DiskBox[77, 0.06764672337772318], DiskBox[78, 0.06764672337772318], 
         DiskBox[79, 0.06764672337772318], DiskBox[80, 0.06764672337772318], 
         DiskBox[81, 0.06764672337772318], DiskBox[82, 0.06764672337772318], 
         DiskBox[83, 0.06764672337772318], DiskBox[84, 0.06764672337772318], 
         DiskBox[85, 0.06764672337772318], DiskBox[86, 0.06764672337772318], 
         DiskBox[87, 0.06764672337772318], DiskBox[88, 0.06764672337772318], 
         DiskBox[89, 0.06764672337772318], DiskBox[90, 0.06764672337772318], 
         DiskBox[91, 0.06764672337772318], DiskBox[92, 0.06764672337772318], 
         DiskBox[93, 0.06764672337772318], DiskBox[94, 0.06764672337772318], 
         DiskBox[95, 0.06764672337772318], DiskBox[96, 0.06764672337772318], 
         DiskBox[97, 0.06764672337772318], DiskBox[98, 0.06764672337772318], 
         DiskBox[99, 0.06764672337772318], 
         DiskBox[100, 0.06764672337772318]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  GridLinesStyle->Directive[
    GrayLevel[
    0.5, 0.4]]]], "Output",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJylvQd0ldmV53u7yFVlV9lud7c93T2ennk9bzp3222Xy1UuVw6kEjkLkXPO
Oeecc0bkLCEyEjkIEEIgQIDIQYggggQI2LN/+zvn0xX2rPXWm7tWBd37hXP2
2eG/w9mnYlyXFk3bxnVp2TjuF193iuvQomXjzr/4qn0n/arEn0Uif9ZC//kf
v4jw/xKJ+H/ZpyX/cn/8//z/XvafEpL/9Km4T6TMn/juSnB5D/tPKcnJyZGB
gwZLbKNm0rVbd8nKytJv3W937siAQYPst27de8iFCxf87d3d81++fCnde/SS
2JY9ZNy8BGnTY4TENW4qjx490vf6awqlq97esHVPu6ZVt+HSqElzefL4ceRy
8cfdvnVLqtasL7NW7ZXlW0/Kks3HJaZmnJw8mRY+7ubNG3bN7DX77JrFicfl
+5qxcupU+puPe/z4kdSu11CGTlkhK3eclilLt0ulqrXlypXL4eMePcqTWnVj
Zfj0VXbNpEVb7Zpr1676xwW0Ki1JSUlSqUotqR7bRr6uVEPmz58vr1+/Lul+
Tty8Wb6tVF1qxLaVClVqy4IFC/jZPaSn/aekXLp4QSbNWCA9hs2RV69fl3ZL
NH72GhkyeoacPp0RuVp8RZ8UvJBB05Pkfl6+W5oS+lyRyUtTJOPC7ci14PLe
7qeJi3fJkVOX3euC7woLX8qAqQlyM+fhm5cnppyShesPFrs898ETGTgtUR4/
KXjz8rPZt2XknK3y/MXL8PJzl+/ImPnb5YV+98blBc9f2Itv3HkQXn4w7ZJM
W5Zif7nL+7if5qzeJzsOZrq/gn8nJJ+SJZsOR1/ewlPm8WP9n9f214/cd8lH
zsv05Xv4OnzEog2HZOv+M9GPaBbF/wMGDpL6DZtIh06dJfPMmfBR1+88kMHT
E+Vp/vPIW1GEn7h4p6SdvR65HjyqqeOkV69eSY9evSW2VQ+ZsCBJOvQZK/Vj
G8nDBw8i77vbX+o1w2Ylybns2+EjXxS+ChfnjUcyuuq1GsiMlSnG60uT0qRK
rUZy7NgxN8oysnxzqqzdfsILuFu8BHn0tODNxz1VPVAvtrEMnLBEVmzPkKkq
D99XryPZly6Fj0vNuCITFu3U2Rhdw8Vlwa9H06607Ny1SypXqy214trIJ1/H
yNBRE2D4H7mfH+Q9lf5TEpRvA+3j1v1G8JDmbgEuX86WnTu2y6qN2x1jFUZ+
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
Lf/v/z/yZ/8b2g9OcQ==\
\>"]]
}, Open  ]],

Cell["And try out a few of igraph\[CloseCurlyQuote]s layout algorithms.", \
"Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"IGLayoutGraphOpt", "[", "acg", "]"}], ",", 
   RowBox[{"IGLayoutKamadaKawai", "[", "acg", "]"}], ",", 
   RowBox[{"IGLayoutFruchtermanReingold", "[", "acg", "]"}]}], 
  "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
        70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
        87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100}, {
        Null, SparseArray[
         Automatic, {100, 100}, 0, {
          1, {{0, 16, 32, 34, 43, 45, 52, 54, 58, 60, 60, 67, 68, 68, 69, 70, 
            71, 72, 74, 81, 84, 84, 85, 86, 87, 87, 87, 87, 88, 88, 88, 88, 
            91, 91, 91, 91, 91, 91, 91, 92, 93, 93, 93, 94, 94, 95, 95, 95, 
            95, 95, 95, 95, 95, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 
            96, 96, 96, 96, 96, 97, 97, 98, 98, 98, 98, 98, 99, 99, 99, 99, 
            99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 
            99, 99, 99, 99, 99}, {{2}, {3}, {8}, {10}, {11}, {16}, {19}, {
            26}, {32}, {43}, {45}, {52}, {71}, {84}, {91}, {100}, {4}, {5}, {
            6}, {12}, {14}, {17}, {37}, {47}, {50}, {51}, {57}, {58}, {60}, {
            61}, {66}, {80}, {7}, {18}, {41}, {44}, {46}, {55}, {56}, {59}, {
            82}, {88}, {96}, {39}, {74}, {25}, {49}, {77}, {85}, {92}, {93}, {
            97}, {21}, {72}, {9}, {13}, {15}, {30}, {81}, {95}, {20}, {27}, {
            28}, {48}, {70}, {76}, {79}, {69}, {34}, {36}, {38}, {23}, {78}, {
            90}, {24}, {62}, {64}, {67}, {75}, {98}, {99}, {29}, {35}, {68}, {
            43}, {31}, {83}, {73}, {33}, {42}, {65}, {63}, {57}, {54}, {89}, {
            61}, {87}, {86}, {94}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> CompressedData["
1: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
          "]}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{1, 3}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{1, 8}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{1, 10}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{1, 11}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{1, 16}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{1, 19}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{1, 26}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{1, 32}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{1, 43}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{1, 45}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{1, 52}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{1, 71}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{1, 84}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{1, 91}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{1, 100}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{2, 4}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{2, 5}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{2, 6}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{2, 12}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{2, 14}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{2, 17}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{2, 37}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{2, 47}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{2, 50}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{2, 51}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{2, 57}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{2, 58}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{2, 60}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{2, 61}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{2, 66}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{2, 80}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{3, 7}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{3, 18}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{4, 41}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{4, 44}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{4, 46}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{4, 55}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{4, 56}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{4, 59}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{4, 82}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{4, 88}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{4, 96}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{5, 39}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{5, 74}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{6, 25}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{6, 49}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{6, 77}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{6, 85}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{6, 92}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{6, 93}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{6, 97}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{7, 21}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{7, 72}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{8, 13}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{8, 15}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{8, 30}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{9, 81}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{9, 95}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{11, 20}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{11, 27}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{11, 28}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{11, 48}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{11, 70}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{11, 76}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{11, 79}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{12, 69}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{14, 34}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{15, 36}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{16, 38}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{17, 23}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{18, 78}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{18, 90}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{19, 24}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{19, 62}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{19, 64}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{19, 67}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{19, 75}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{19, 98}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{19, 99}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{20, 29}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{20, 35}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{20, 68}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{22, 43}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{23, 31}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{24, 83}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{28, 73}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{32, 33}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{32, 42}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{32, 65}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{39, 63}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{40, 57}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{43, 54}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{45, 89}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{53, 61}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{69, 87}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{71, 86}, 0.04656704827724946]}, 
           {Arrowheads[0.], ArrowBox[{76, 94}, 0.04656704827724946]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.04656704827724946], DiskBox[2, 0.04656704827724946], 
           DiskBox[3, 0.04656704827724946], DiskBox[4, 0.04656704827724946], 
           DiskBox[5, 0.04656704827724946], DiskBox[6, 0.04656704827724946], 
           DiskBox[7, 0.04656704827724946], DiskBox[8, 0.04656704827724946], 
           DiskBox[9, 0.04656704827724946], DiskBox[10, 0.04656704827724946], 
           DiskBox[11, 0.04656704827724946], DiskBox[12, 0.04656704827724946],
            DiskBox[13, 0.04656704827724946], 
           DiskBox[14, 0.04656704827724946], DiskBox[15, 0.04656704827724946],
            DiskBox[16, 0.04656704827724946], 
           DiskBox[17, 0.04656704827724946], DiskBox[18, 0.04656704827724946],
            DiskBox[19, 0.04656704827724946], 
           DiskBox[20, 0.04656704827724946], DiskBox[21, 0.04656704827724946],
            DiskBox[22, 0.04656704827724946], 
           DiskBox[23, 0.04656704827724946], DiskBox[24, 0.04656704827724946],
            DiskBox[25, 0.04656704827724946], 
           DiskBox[26, 0.04656704827724946], DiskBox[27, 0.04656704827724946],
            DiskBox[28, 0.04656704827724946], 
           DiskBox[29, 0.04656704827724946], DiskBox[30, 0.04656704827724946],
            DiskBox[31, 0.04656704827724946], 
           DiskBox[32, 0.04656704827724946], DiskBox[33, 0.04656704827724946],
            DiskBox[34, 0.04656704827724946], 
           DiskBox[35, 0.04656704827724946], DiskBox[36, 0.04656704827724946],
            DiskBox[37, 0.04656704827724946], 
           DiskBox[38, 0.04656704827724946], DiskBox[39, 0.04656704827724946],
            DiskBox[40, 0.04656704827724946], 
           DiskBox[41, 0.04656704827724946], DiskBox[42, 0.04656704827724946],
            DiskBox[43, 0.04656704827724946], 
           DiskBox[44, 0.04656704827724946], DiskBox[45, 0.04656704827724946],
            DiskBox[46, 0.04656704827724946], 
           DiskBox[47, 0.04656704827724946], DiskBox[48, 0.04656704827724946],
            DiskBox[49, 0.04656704827724946], 
           DiskBox[50, 0.04656704827724946], DiskBox[51, 0.04656704827724946],
            DiskBox[52, 0.04656704827724946], 
           DiskBox[53, 0.04656704827724946], DiskBox[54, 0.04656704827724946],
            DiskBox[55, 0.04656704827724946], 
           DiskBox[56, 0.04656704827724946], DiskBox[57, 0.04656704827724946],
            DiskBox[58, 0.04656704827724946], 
           DiskBox[59, 0.04656704827724946], DiskBox[60, 0.04656704827724946],
            DiskBox[61, 0.04656704827724946], 
           DiskBox[62, 0.04656704827724946], DiskBox[63, 0.04656704827724946],
            DiskBox[64, 0.04656704827724946], 
           DiskBox[65, 0.04656704827724946], DiskBox[66, 0.04656704827724946],
            DiskBox[67, 0.04656704827724946], 
           DiskBox[68, 0.04656704827724946], DiskBox[69, 0.04656704827724946],
            DiskBox[70, 0.04656704827724946], 
           DiskBox[71, 0.04656704827724946], DiskBox[72, 0.04656704827724946],
            DiskBox[73, 0.04656704827724946], 
           DiskBox[74, 0.04656704827724946], DiskBox[75, 0.04656704827724946],
            DiskBox[76, 0.04656704827724946], 
           DiskBox[77, 0.04656704827724946], DiskBox[78, 0.04656704827724946],
            DiskBox[79, 0.04656704827724946], 
           DiskBox[80, 0.04656704827724946], DiskBox[81, 0.04656704827724946],
            DiskBox[82, 0.04656704827724946], 
           DiskBox[83, 0.04656704827724946], DiskBox[84, 0.04656704827724946],
            DiskBox[85, 0.04656704827724946], 
           DiskBox[86, 0.04656704827724946], DiskBox[87, 0.04656704827724946],
            DiskBox[88, 0.04656704827724946], 
           DiskBox[89, 0.04656704827724946], DiskBox[90, 0.04656704827724946],
            DiskBox[91, 0.04656704827724946], 
           DiskBox[92, 0.04656704827724946], DiskBox[93, 0.04656704827724946],
            DiskBox[94, 0.04656704827724946], 
           DiskBox[95, 0.04656704827724946], DiskBox[96, 0.04656704827724946],
            DiskBox[97, 0.04656704827724946], 
           DiskBox[98, 0.04656704827724946], DiskBox[99, 0.04656704827724946],
            DiskBox[100, 0.04656704827724946]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
        70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
        87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100}, {
        Null, SparseArray[
         Automatic, {100, 100}, 0, {
          1, {{0, 16, 32, 34, 43, 45, 52, 54, 58, 60, 60, 67, 68, 68, 69, 70, 
            71, 72, 74, 81, 84, 84, 85, 86, 87, 87, 87, 87, 88, 88, 88, 88, 
            91, 91, 91, 91, 91, 91, 91, 92, 93, 93, 93, 94, 94, 95, 95, 95, 
            95, 95, 95, 95, 95, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 
            96, 96, 96, 96, 96, 97, 97, 98, 98, 98, 98, 98, 99, 99, 99, 99, 
            99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 
            99, 99, 99, 99, 99}, {{2}, {3}, {8}, {10}, {11}, {16}, {19}, {
            26}, {32}, {43}, {45}, {52}, {71}, {84}, {91}, {100}, {4}, {5}, {
            6}, {12}, {14}, {17}, {37}, {47}, {50}, {51}, {57}, {58}, {60}, {
            61}, {66}, {80}, {7}, {18}, {41}, {44}, {46}, {55}, {56}, {59}, {
            82}, {88}, {96}, {39}, {74}, {25}, {49}, {77}, {85}, {92}, {93}, {
            97}, {21}, {72}, {9}, {13}, {15}, {30}, {81}, {95}, {20}, {27}, {
            28}, {48}, {70}, {76}, {79}, {69}, {34}, {36}, {38}, {23}, {78}, {
            90}, {24}, {62}, {64}, {67}, {75}, {98}, {99}, {29}, {35}, {68}, {
            43}, {31}, {83}, {73}, {33}, {42}, {65}, {63}, {57}, {54}, {89}, {
            61}, {87}, {86}, {94}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> CompressedData["
1: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

          "]}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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

         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{1, 3}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{1, 8}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{1, 10}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{1, 11}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{1, 16}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{1, 19}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{1, 26}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{1, 32}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{1, 43}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{1, 45}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{1, 52}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{1, 71}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{1, 84}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{1, 91}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{1, 100}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{2, 4}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{2, 5}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{2, 6}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{2, 12}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{2, 14}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{2, 17}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{2, 37}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{2, 47}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{2, 50}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{2, 51}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{2, 57}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{2, 58}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{2, 60}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{2, 61}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{2, 66}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{2, 80}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{3, 7}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{3, 18}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{4, 41}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{4, 44}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{4, 46}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{4, 55}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{4, 56}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{4, 59}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{4, 82}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{4, 88}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{4, 96}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{5, 39}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{5, 74}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{6, 25}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{6, 49}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{6, 77}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{6, 85}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{6, 92}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{6, 93}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{6, 97}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{7, 21}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{7, 72}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{8, 13}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{8, 15}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{8, 30}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{9, 81}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{9, 95}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{11, 20}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{11, 27}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{11, 28}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{11, 48}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{11, 70}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{11, 76}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{11, 79}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{12, 69}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{14, 34}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{15, 36}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{16, 38}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{17, 23}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{18, 78}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{18, 90}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{19, 24}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{19, 62}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{19, 64}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{19, 67}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{19, 75}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{19, 98}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{19, 99}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{20, 29}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{20, 35}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{20, 68}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{22, 43}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{23, 31}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{24, 83}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{28, 73}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{32, 33}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{32, 42}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{32, 65}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{39, 63}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{40, 57}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{43, 54}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{45, 89}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{53, 61}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{69, 87}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{71, 86}, 0.05159269388257069]}, 
           {Arrowheads[0.], ArrowBox[{76, 94}, 0.05159269388257069]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.05159269388257069], DiskBox[2, 0.05159269388257069], 
           DiskBox[3, 0.05159269388257069], DiskBox[4, 0.05159269388257069], 
           DiskBox[5, 0.05159269388257069], DiskBox[6, 0.05159269388257069], 
           DiskBox[7, 0.05159269388257069], DiskBox[8, 0.05159269388257069], 
           DiskBox[9, 0.05159269388257069], DiskBox[10, 0.05159269388257069], 
           DiskBox[11, 0.05159269388257069], DiskBox[12, 0.05159269388257069],
            DiskBox[13, 0.05159269388257069], 
           DiskBox[14, 0.05159269388257069], DiskBox[15, 0.05159269388257069],
            DiskBox[16, 0.05159269388257069], 
           DiskBox[17, 0.05159269388257069], DiskBox[18, 0.05159269388257069],
            DiskBox[19, 0.05159269388257069], 
           DiskBox[20, 0.05159269388257069], DiskBox[21, 0.05159269388257069],
            DiskBox[22, 0.05159269388257069], 
           DiskBox[23, 0.05159269388257069], DiskBox[24, 0.05159269388257069],
            DiskBox[25, 0.05159269388257069], 
           DiskBox[26, 0.05159269388257069], DiskBox[27, 0.05159269388257069],
            DiskBox[28, 0.05159269388257069], 
           DiskBox[29, 0.05159269388257069], DiskBox[30, 0.05159269388257069],
            DiskBox[31, 0.05159269388257069], 
           DiskBox[32, 0.05159269388257069], DiskBox[33, 0.05159269388257069],
            DiskBox[34, 0.05159269388257069], 
           DiskBox[35, 0.05159269388257069], DiskBox[36, 0.05159269388257069],
            DiskBox[37, 0.05159269388257069], 
           DiskBox[38, 0.05159269388257069], DiskBox[39, 0.05159269388257069],
            DiskBox[40, 0.05159269388257069], 
           DiskBox[41, 0.05159269388257069], DiskBox[42, 0.05159269388257069],
            DiskBox[43, 0.05159269388257069], 
           DiskBox[44, 0.05159269388257069], DiskBox[45, 0.05159269388257069],
            DiskBox[46, 0.05159269388257069], 
           DiskBox[47, 0.05159269388257069], DiskBox[48, 0.05159269388257069],
            DiskBox[49, 0.05159269388257069], 
           DiskBox[50, 0.05159269388257069], DiskBox[51, 0.05159269388257069],
            DiskBox[52, 0.05159269388257069], 
           DiskBox[53, 0.05159269388257069], DiskBox[54, 0.05159269388257069],
            DiskBox[55, 0.05159269388257069], 
           DiskBox[56, 0.05159269388257069], DiskBox[57, 0.05159269388257069],
            DiskBox[58, 0.05159269388257069], 
           DiskBox[59, 0.05159269388257069], DiskBox[60, 0.05159269388257069],
            DiskBox[61, 0.05159269388257069], 
           DiskBox[62, 0.05159269388257069], DiskBox[63, 0.05159269388257069],
            DiskBox[64, 0.05159269388257069], 
           DiskBox[65, 0.05159269388257069], DiskBox[66, 0.05159269388257069],
            DiskBox[67, 0.05159269388257069], 
           DiskBox[68, 0.05159269388257069], DiskBox[69, 0.05159269388257069],
            DiskBox[70, 0.05159269388257069], 
           DiskBox[71, 0.05159269388257069], DiskBox[72, 0.05159269388257069],
            DiskBox[73, 0.05159269388257069], 
           DiskBox[74, 0.05159269388257069], DiskBox[75, 0.05159269388257069],
            DiskBox[76, 0.05159269388257069], 
           DiskBox[77, 0.05159269388257069], DiskBox[78, 0.05159269388257069],
            DiskBox[79, 0.05159269388257069], 
           DiskBox[80, 0.05159269388257069], DiskBox[81, 0.05159269388257069],
            DiskBox[82, 0.05159269388257069], 
           DiskBox[83, 0.05159269388257069], DiskBox[84, 0.05159269388257069],
            DiskBox[85, 0.05159269388257069], 
           DiskBox[86, 0.05159269388257069], DiskBox[87, 0.05159269388257069],
            DiskBox[88, 0.05159269388257069], 
           DiskBox[89, 0.05159269388257069], DiskBox[90, 0.05159269388257069],
            DiskBox[91, 0.05159269388257069], 
           DiskBox[92, 0.05159269388257069], DiskBox[93, 0.05159269388257069],
            DiskBox[94, 0.05159269388257069], 
           DiskBox[95, 0.05159269388257069], DiskBox[96, 0.05159269388257069],
            DiskBox[97, 0.05159269388257069], 
           DiskBox[98, 0.05159269388257069], DiskBox[99, 0.05159269388257069],
            DiskBox[100, 0.05159269388257069]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
        70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
        87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100}, {
        Null, SparseArray[
         Automatic, {100, 100}, 0, {
          1, {{0, 16, 32, 34, 43, 45, 52, 54, 58, 60, 60, 67, 68, 68, 69, 70, 
            71, 72, 74, 81, 84, 84, 85, 86, 87, 87, 87, 87, 88, 88, 88, 88, 
            91, 91, 91, 91, 91, 91, 91, 92, 93, 93, 93, 94, 94, 95, 95, 95, 
            95, 95, 95, 95, 95, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 
            96, 96, 96, 96, 96, 97, 97, 98, 98, 98, 98, 98, 99, 99, 99, 99, 
            99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 
            99, 99, 99, 99, 99}, {{2}, {3}, {8}, {10}, {11}, {16}, {19}, {
            26}, {32}, {43}, {45}, {52}, {71}, {84}, {91}, {100}, {4}, {5}, {
            6}, {12}, {14}, {17}, {37}, {47}, {50}, {51}, {57}, {58}, {60}, {
            61}, {66}, {80}, {7}, {18}, {41}, {44}, {46}, {55}, {56}, {59}, {
            82}, {88}, {96}, {39}, {74}, {25}, {49}, {77}, {85}, {92}, {93}, {
            97}, {21}, {72}, {9}, {13}, {15}, {30}, {81}, {95}, {20}, {27}, {
            28}, {48}, {70}, {76}, {79}, {69}, {34}, {36}, {38}, {23}, {78}, {
            90}, {24}, {62}, {64}, {67}, {75}, {98}, {99}, {29}, {35}, {68}, {
            43}, {31}, {83}, {73}, {33}, {42}, {65}, {63}, {57}, {54}, {89}, {
            61}, {87}, {86}, {94}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}]}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> CompressedData["
1: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
7XmqPxrPLXI=
          "]}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
7XmqPxrPLXI=
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{1, 3}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{1, 8}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{1, 10}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{1, 11}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{1, 16}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{1, 19}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{1, 26}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{1, 32}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{1, 43}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{1, 45}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{1, 52}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{1, 71}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{1, 84}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{1, 91}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{1, 100}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{2, 4}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{2, 5}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{2, 6}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{2, 12}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{2, 14}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{2, 17}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{2, 37}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{2, 47}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{2, 50}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{2, 51}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{2, 57}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{2, 58}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{2, 60}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{2, 61}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{2, 66}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{2, 80}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{3, 7}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{3, 18}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{4, 41}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{4, 44}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{4, 46}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{4, 55}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{4, 56}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{4, 59}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{4, 82}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{4, 88}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{4, 96}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{5, 39}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{5, 74}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{6, 25}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{6, 49}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{6, 77}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{6, 85}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{6, 92}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{6, 93}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{6, 97}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{7, 21}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{7, 72}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{8, 13}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{8, 15}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{8, 30}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{9, 81}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{9, 95}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{11, 20}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{11, 27}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{11, 28}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{11, 48}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{11, 70}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{11, 76}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{11, 79}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{12, 69}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{14, 34}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{15, 36}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{16, 38}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{17, 23}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{18, 78}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{18, 90}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{19, 24}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{19, 62}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{19, 64}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{19, 67}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{19, 75}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{19, 98}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{19, 99}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{20, 29}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{20, 35}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{20, 68}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{22, 43}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{23, 31}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{24, 83}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{28, 73}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{32, 33}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{32, 42}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{32, 65}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{39, 63}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{40, 57}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{43, 54}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{45, 89}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{53, 61}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{69, 87}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{71, 86}, 0.06032217399482025]}, 
           {Arrowheads[0.], ArrowBox[{76, 94}, 0.06032217399482025]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.06032217399482025], DiskBox[2, 0.06032217399482025], 
           DiskBox[3, 0.06032217399482025], DiskBox[4, 0.06032217399482025], 
           DiskBox[5, 0.06032217399482025], DiskBox[6, 0.06032217399482025], 
           DiskBox[7, 0.06032217399482025], DiskBox[8, 0.06032217399482025], 
           DiskBox[9, 0.06032217399482025], DiskBox[10, 0.06032217399482025], 
           DiskBox[11, 0.06032217399482025], DiskBox[12, 0.06032217399482025],
            DiskBox[13, 0.06032217399482025], 
           DiskBox[14, 0.06032217399482025], DiskBox[15, 0.06032217399482025],
            DiskBox[16, 0.06032217399482025], 
           DiskBox[17, 0.06032217399482025], DiskBox[18, 0.06032217399482025],
            DiskBox[19, 0.06032217399482025], 
           DiskBox[20, 0.06032217399482025], DiskBox[21, 0.06032217399482025],
            DiskBox[22, 0.06032217399482025], 
           DiskBox[23, 0.06032217399482025], DiskBox[24, 0.06032217399482025],
            DiskBox[25, 0.06032217399482025], 
           DiskBox[26, 0.06032217399482025], DiskBox[27, 0.06032217399482025],
            DiskBox[28, 0.06032217399482025], 
           DiskBox[29, 0.06032217399482025], DiskBox[30, 0.06032217399482025],
            DiskBox[31, 0.06032217399482025], 
           DiskBox[32, 0.06032217399482025], DiskBox[33, 0.06032217399482025],
            DiskBox[34, 0.06032217399482025], 
           DiskBox[35, 0.06032217399482025], DiskBox[36, 0.06032217399482025],
            DiskBox[37, 0.06032217399482025], 
           DiskBox[38, 0.06032217399482025], DiskBox[39, 0.06032217399482025],
            DiskBox[40, 0.06032217399482025], 
           DiskBox[41, 0.06032217399482025], DiskBox[42, 0.06032217399482025],
            DiskBox[43, 0.06032217399482025], 
           DiskBox[44, 0.06032217399482025], DiskBox[45, 0.06032217399482025],
            DiskBox[46, 0.06032217399482025], 
           DiskBox[47, 0.06032217399482025], DiskBox[48, 0.06032217399482025],
            DiskBox[49, 0.06032217399482025], 
           DiskBox[50, 0.06032217399482025], DiskBox[51, 0.06032217399482025],
            DiskBox[52, 0.06032217399482025], 
           DiskBox[53, 0.06032217399482025], DiskBox[54, 0.06032217399482025],
            DiskBox[55, 0.06032217399482025], 
           DiskBox[56, 0.06032217399482025], DiskBox[57, 0.06032217399482025],
            DiskBox[58, 0.06032217399482025], 
           DiskBox[59, 0.06032217399482025], DiskBox[60, 0.06032217399482025],
            DiskBox[61, 0.06032217399482025], 
           DiskBox[62, 0.06032217399482025], DiskBox[63, 0.06032217399482025],
            DiskBox[64, 0.06032217399482025], 
           DiskBox[65, 0.06032217399482025], DiskBox[66, 0.06032217399482025],
            DiskBox[67, 0.06032217399482025], 
           DiskBox[68, 0.06032217399482025], DiskBox[69, 0.06032217399482025],
            DiskBox[70, 0.06032217399482025], 
           DiskBox[71, 0.06032217399482025], DiskBox[72, 0.06032217399482025],
            DiskBox[73, 0.06032217399482025], 
           DiskBox[74, 0.06032217399482025], DiskBox[75, 0.06032217399482025],
            DiskBox[76, 0.06032217399482025], 
           DiskBox[77, 0.06032217399482025], DiskBox[78, 0.06032217399482025],
            DiskBox[79, 0.06032217399482025], 
           DiskBox[80, 0.06032217399482025], DiskBox[81, 0.06032217399482025],
            DiskBox[82, 0.06032217399482025], 
           DiskBox[83, 0.06032217399482025], DiskBox[84, 0.06032217399482025],
            DiskBox[85, 0.06032217399482025], 
           DiskBox[86, 0.06032217399482025], DiskBox[87, 0.06032217399482025],
            DiskBox[88, 0.06032217399482025], 
           DiskBox[89, 0.06032217399482025], DiskBox[90, 0.06032217399482025],
            DiskBox[91, 0.06032217399482025], 
           DiskBox[92, 0.06032217399482025], DiskBox[93, 0.06032217399482025],
            DiskBox[94, 0.06032217399482025], 
           DiskBox[95, 0.06032217399482025], DiskBox[96, 0.06032217399482025],
            DiskBox[97, 0.06032217399482025], 
           DiskBox[98, 0.06032217399482025], DiskBox[99, 0.06032217399482025],
            DiskBox[100, 0.06032217399482025]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]]]}], "}"}]], "Output"]
}, Open  ]],

Cell["Layout functions typically have many options to tune:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", "IGLayoutGraphOpt", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"MaxIterations\"\>", "\[Rule]", "500"}], ",", 
   RowBox[{"\<\"NodeCharge\"\>", "\[Rule]", "0.001`"}], ",", 
   RowBox[{"\<\"NodeMass\"\>", "\[Rule]", "30"}], ",", 
   RowBox[{"\<\"SpringLength\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"SpringConstant\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"MaxStepMovement\"\>", "\[Rule]", "5"}], ",", 
   RowBox[{"\<\"Continue\"\>", "\[Rule]", "False"}]}], "}"}]], "Output"]
}, Open  ]],

Cell["\<\
Increasing the number of iterations will usually improve the result.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGLayoutGraphOpt", "[", 
  RowBox[{"acg", ",", 
   RowBox[{"\"\<MaxIterations\>\"", "\[Rule]", "5000"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
       38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55,
       56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73,
       74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
       92, 93, 94, 95, 96, 97, 98, 99, 100}, {
      Null, SparseArray[
       Automatic, {100, 100}, 0, {
        1, {{0, 16, 32, 34, 43, 45, 52, 54, 58, 60, 60, 67, 68, 68, 69, 70, 
          71, 72, 74, 81, 84, 84, 85, 86, 87, 87, 87, 87, 88, 88, 88, 88, 91, 
          91, 91, 91, 91, 91, 91, 92, 93, 93, 93, 94, 94, 95, 95, 95, 95, 95, 
          95, 95, 95, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 
          96, 96, 97, 97, 98, 98, 98, 98, 98, 99, 99, 99, 99, 99, 99, 99, 99, 
          99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 
          99}, {{2}, {3}, {8}, {10}, {11}, {16}, {19}, {26}, {32}, {43}, {
          45}, {52}, {71}, {84}, {91}, {100}, {4}, {5}, {6}, {12}, {14}, {
          17}, {37}, {47}, {50}, {51}, {57}, {58}, {60}, {61}, {66}, {80}, {
          7}, {18}, {41}, {44}, {46}, {55}, {56}, {59}, {82}, {88}, {96}, {
          39}, {74}, {25}, {49}, {77}, {85}, {92}, {93}, {97}, {21}, {72}, {
          9}, {13}, {15}, {30}, {81}, {95}, {20}, {27}, {28}, {48}, {70}, {
          76}, {79}, {69}, {34}, {36}, {38}, {23}, {78}, {90}, {24}, {62}, {
          64}, {67}, {75}, {98}, {99}, {29}, {35}, {68}, {43}, {31}, {83}, {
          73}, {33}, {42}, {65}, {63}, {57}, {54}, {89}, {61}, {87}, {86}, {
          94}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}]}, {
      GraphLayout -> {"Dimension" -> 2}, VertexCoordinates -> CompressedData["

1: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
f+toOJg=
        "]}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
f+toOJg=
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Arrowheads[0.], ArrowBox[{1, 2}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{1, 3}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{1, 8}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{1, 10}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{1, 11}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{1, 16}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{1, 19}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{1, 26}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{1, 32}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{1, 43}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{1, 45}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{1, 52}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{1, 71}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{1, 84}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{1, 91}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{1, 100}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{2, 4}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{2, 5}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{2, 6}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{2, 12}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{2, 14}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{2, 17}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{2, 37}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{2, 47}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{2, 50}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{2, 51}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{2, 57}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{2, 58}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{2, 60}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{2, 61}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{2, 66}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{2, 80}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{3, 7}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{3, 18}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{4, 41}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{4, 44}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{4, 46}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{4, 55}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{4, 56}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{4, 59}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{4, 82}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{4, 88}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{4, 96}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{5, 39}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{5, 74}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{6, 25}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{6, 49}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{6, 77}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{6, 85}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{6, 92}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{6, 93}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{6, 97}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{7, 21}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{7, 72}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{8, 9}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{8, 13}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{8, 15}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{8, 30}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{9, 81}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{9, 95}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{11, 20}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{11, 27}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{11, 28}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{11, 48}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{11, 70}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{11, 76}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{11, 79}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{12, 69}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{14, 34}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{15, 36}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{16, 38}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{17, 23}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{18, 78}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{18, 90}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{19, 24}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{19, 62}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{19, 64}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{19, 67}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{19, 75}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{19, 98}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{19, 99}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{20, 29}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{20, 35}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{20, 68}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{22, 43}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{23, 31}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{24, 83}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{28, 73}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{32, 33}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{32, 42}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{32, 65}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{39, 63}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{40, 57}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{43, 54}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{45, 89}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{53, 61}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{69, 87}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{71, 86}, 0.05316722158850494]}, 
         {Arrowheads[0.], ArrowBox[{76, 94}, 0.05316722158850494]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.05316722158850494], DiskBox[2, 0.05316722158850494], 
         DiskBox[3, 0.05316722158850494], DiskBox[4, 0.05316722158850494], 
         DiskBox[5, 0.05316722158850494], DiskBox[6, 0.05316722158850494], 
         DiskBox[7, 0.05316722158850494], DiskBox[8, 0.05316722158850494], 
         DiskBox[9, 0.05316722158850494], DiskBox[10, 0.05316722158850494], 
         DiskBox[11, 0.05316722158850494], DiskBox[12, 0.05316722158850494], 
         DiskBox[13, 0.05316722158850494], DiskBox[14, 0.05316722158850494], 
         DiskBox[15, 0.05316722158850494], DiskBox[16, 0.05316722158850494], 
         DiskBox[17, 0.05316722158850494], DiskBox[18, 0.05316722158850494], 
         DiskBox[19, 0.05316722158850494], DiskBox[20, 0.05316722158850494], 
         DiskBox[21, 0.05316722158850494], DiskBox[22, 0.05316722158850494], 
         DiskBox[23, 0.05316722158850494], DiskBox[24, 0.05316722158850494], 
         DiskBox[25, 0.05316722158850494], DiskBox[26, 0.05316722158850494], 
         DiskBox[27, 0.05316722158850494], DiskBox[28, 0.05316722158850494], 
         DiskBox[29, 0.05316722158850494], DiskBox[30, 0.05316722158850494], 
         DiskBox[31, 0.05316722158850494], DiskBox[32, 0.05316722158850494], 
         DiskBox[33, 0.05316722158850494], DiskBox[34, 0.05316722158850494], 
         DiskBox[35, 0.05316722158850494], DiskBox[36, 0.05316722158850494], 
         DiskBox[37, 0.05316722158850494], DiskBox[38, 0.05316722158850494], 
         DiskBox[39, 0.05316722158850494], DiskBox[40, 0.05316722158850494], 
         DiskBox[41, 0.05316722158850494], DiskBox[42, 0.05316722158850494], 
         DiskBox[43, 0.05316722158850494], DiskBox[44, 0.05316722158850494], 
         DiskBox[45, 0.05316722158850494], DiskBox[46, 0.05316722158850494], 
         DiskBox[47, 0.05316722158850494], DiskBox[48, 0.05316722158850494], 
         DiskBox[49, 0.05316722158850494], DiskBox[50, 0.05316722158850494], 
         DiskBox[51, 0.05316722158850494], DiskBox[52, 0.05316722158850494], 
         DiskBox[53, 0.05316722158850494], DiskBox[54, 0.05316722158850494], 
         DiskBox[55, 0.05316722158850494], DiskBox[56, 0.05316722158850494], 
         DiskBox[57, 0.05316722158850494], DiskBox[58, 0.05316722158850494], 
         DiskBox[59, 0.05316722158850494], DiskBox[60, 0.05316722158850494], 
         DiskBox[61, 0.05316722158850494], DiskBox[62, 0.05316722158850494], 
         DiskBox[63, 0.05316722158850494], DiskBox[64, 0.05316722158850494], 
         DiskBox[65, 0.05316722158850494], DiskBox[66, 0.05316722158850494], 
         DiskBox[67, 0.05316722158850494], DiskBox[68, 0.05316722158850494], 
         DiskBox[69, 0.05316722158850494], DiskBox[70, 0.05316722158850494], 
         DiskBox[71, 0.05316722158850494], DiskBox[72, 0.05316722158850494], 
         DiskBox[73, 0.05316722158850494], DiskBox[74, 0.05316722158850494], 
         DiskBox[75, 0.05316722158850494], DiskBox[76, 0.05316722158850494], 
         DiskBox[77, 0.05316722158850494], DiskBox[78, 0.05316722158850494], 
         DiskBox[79, 0.05316722158850494], DiskBox[80, 0.05316722158850494], 
         DiskBox[81, 0.05316722158850494], DiskBox[82, 0.05316722158850494], 
         DiskBox[83, 0.05316722158850494], DiskBox[84, 0.05316722158850494], 
         DiskBox[85, 0.05316722158850494], DiskBox[86, 0.05316722158850494], 
         DiskBox[87, 0.05316722158850494], DiskBox[88, 0.05316722158850494], 
         DiskBox[89, 0.05316722158850494], DiskBox[90, 0.05316722158850494], 
         DiskBox[91, 0.05316722158850494], DiskBox[92, 0.05316722158850494], 
         DiskBox[93, 0.05316722158850494], DiskBox[94, 0.05316722158850494], 
         DiskBox[95, 0.05316722158850494], DiskBox[96, 0.05316722158850494], 
         DiskBox[97, 0.05316722158850494], DiskBox[98, 0.05316722158850494], 
         DiskBox[99, 0.05316722158850494], 
         DiskBox[100, 0.05316722158850494]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]]]], "Output"]
}, Open  ]],

Cell[TextData[StyleBox["A final note",
 FontWeight->"Bold"]], "Text"],

Cell[TextData[{
 "Please refer to the usage messages for information on how to use each \
function. For more information on the meaning of various function options, \
the algorithms used by the functions, references, etc. please refer to ",
 ButtonBox["the C/igraph documentation",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://igraph.org/c/doc/"], None},
  ButtonNote->"http://igraph.org/c/doc/"],
 ". The igraph documentation provides article references for most nontrivial \
algorithms. Note that IGraph/M is currently built using the development \
version of igraph (0.8.0-pre) while the online igraph documentation is for \
the last released version (0.7.1). Some new functionality may not yet be \
described in the online documentation."
}], "Text"],

Cell["\<\
The following sections provide general information on each functionality \
area, and show common usage patterns.\
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graph creation", "Section"],

Cell[TextData[{
 "All the graph creation functions in IGraph/M take any standard ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox["Graph", TraditionalForm]]],
 " option such as ",
 Cell[BoxData[
  FormBox["VertexLabels", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox["GraphStyle", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox["VertexStyle", TraditionalForm]]],
 ", etc."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGLCF", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "6"}], "}"}], ",", "12", ",", 
   RowBox[{"GraphStyle", "\[Rule]", "\"\<SmallNetwork\>\""}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, {
      Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}, {8, 9}, {
       9, 10}, {10, 11}, {11, 12}, {1, 12}, {1, 7}, {2, 8}, {3, 9}, {4, 10}, {
       5, 11}, {6, 12}}}, {
      GraphLayout -> {
        "Dimension" -> 2, "VertexLayout" -> "CircularEmbedding"}, GraphStyle -> 
       "SmallNetwork"}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Directive[
        Hue[0.625, 0.5, 0.7], 
        Thickness[Large], 
        Opacity[1]], 
       LineBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$2", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$7", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$12", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$3", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$4", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$5", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$10", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$11", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$7", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$12", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$10", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$10", Automatic, Center], 
         DynamicLocation["VertexID$11", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$11", Automatic, Center], 
         DynamicLocation["VertexID$12", Automatic, Center]}]}, {
       Directive[
        Hue[0.125, 0.7, 0.9], 
        EdgeForm[]], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{-0.5332755965945022, 
           0.7994742105954359}, {-0.46672440340549914`, 
           0.7994742105954359}, {-0.4334488068109976, 
           0.7994742105954359}, {-0.4334488068109976, 
           0.8327498071899374}, {-0.4334488068109976, 
           0.8993010003789405}, {-0.4334488068109976, 
           0.932576596973442}, {-0.46672440340549914`, 
           0.932576596973442}, {-0.5332755965945022, 
           0.932576596973442}, {-0.5665511931890037, 
           0.932576596973442}, {-0.5665511931890037, 
           0.8993010003789405}, {-0.5665511931890037, 
           0.8327498071899374}, {-0.5665511931890037, 
           0.7994742105954359}, {-0.5332755965945022, 0.7994742105954359}}}], 
          "DynamicName", BoxID -> "VertexID$1"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{-0.8993010003789406, 
           0.43344880681099773`}, {-0.8327498071899375, 
           0.43344880681099773`}, {-0.799474210595436, 
           0.43344880681099773`}, {-0.799474210595436, 
           0.46672440340549926`}, {-0.799474210595436, 
           0.5332755965945023}, {-0.799474210595436, 
           0.5665511931890038}, {-0.8327498071899375, 
           0.5665511931890038}, {-0.8993010003789406, 
           0.5665511931890038}, {-0.9325765969734421, 
           0.5665511931890038}, {-0.9325765969734421, 
           0.5332755965945023}, {-0.9325765969734421, 
           0.46672440340549926`}, {-0.9325765969734421, 
           0.43344880681099773`}, {-0.8993010003789406, 
           0.43344880681099773`}}}], "DynamicName", BoxID -> "VertexID$2"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 
           2}}}, {{{-1.0332755965945015`, -0.066551193189002}, \
{-0.9667244034054985, -0.066551193189002}, {-0.933448806810997, \
-0.066551193189002}, {-0.933448806810997, -0.033275596594500495`}, \
{-0.933448806810997, 0.03327559659450252}, {-0.933448806810997, 
           0.06655119318900403}, {-0.9667244034054985, 
           0.06655119318900403}, {-1.0332755965945015`, 
           0.06655119318900403}, {-1.066551193189003, 
           0.06655119318900403}, {-1.066551193189003, 
           0.03327559659450252}, {-1.066551193189003, \
-0.033275596594500495`}, {-1.066551193189003, -0.066551193189002}, \
{-1.0332755965945015`, -0.066551193189002}}}], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox["3", TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 
           2}}}, {{{-0.8993010003789398, -0.5665511931890024}, \
{-0.8327498071899367, -0.5665511931890024}, {-0.7994742105954352, \
-0.5665511931890024}, {-0.7994742105954352, -0.5332755965945009}, \
{-0.7994742105954352, -0.46672440340549787`}, {-0.7994742105954352, \
-0.4334488068109964}, {-0.8327498071899367, -0.4334488068109964}, \
{-0.8993010003789398, -0.4334488068109964}, {-0.9325765969734413, \
-0.4334488068109964}, {-0.9325765969734413, -0.46672440340549787`}, \
{-0.9325765969734413, -0.5332755965945009}, {-0.9325765969734413, \
-0.5665511931890024}, {-0.8993010003789398, -0.5665511931890024}}}], 
          "DynamicName", BoxID -> "VertexID$4"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          DynamicLocation["VertexID$4", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 
           2}}}, {{{-0.533275596594501, -0.932576596973441}, \
{-0.466724403405498, -0.932576596973441}, {-0.4334488068109965, \
-0.932576596973441}, {-0.4334488068109965, -0.8993010003789395}, \
{-0.4334488068109965, -0.8327498071899364}, {-0.4334488068109965, \
-0.7994742105954349}, {-0.466724403405498, -0.7994742105954349}, \
{-0.533275596594501, -0.7994742105954349}, {-0.5665511931890025, \
-0.7994742105954349}, {-0.5665511931890025, -0.8327498071899364}, \
{-0.5665511931890025, -0.8993010003789395}, {-0.5665511931890025, \
-0.932576596973441}, {-0.533275596594501, -0.932576596973441}}}], 
          "DynamicName", BoxID -> "VertexID$5"], 
         InsetBox[
          FormBox["5", TraditionalForm], 
          DynamicLocation["VertexID$5", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$5"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 
           2}}}, {{{-0.033275596594501126`, -1.066551193189003}, {
           0.03327559659450189, -1.066551193189003}, {
           0.0665511931890034, -1.066551193189003}, {
           0.0665511931890034, -1.0332755965945015`}, {
           0.0665511931890034, -0.9667244034054985}, {
           0.0665511931890034, -0.933448806810997}, {
           0.03327559659450189, -0.933448806810997}, {-0.033275596594501126`, \
-0.933448806810997}, {-0.06655119318900263, -0.933448806810997}, \
{-0.06655119318900263, -0.9667244034054985}, {-0.06655119318900263, \
-1.0332755965945015`}, {-0.06655119318900263, -1.066551193189003}, \
{-0.033275596594501126`, -1.066551193189003}}}], "DynamicName", BoxID -> 
          "VertexID$6"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          DynamicLocation["VertexID$6", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$6"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           0.46672440340549903`, -0.9325765969734421}, {
           0.5332755965945021, -0.9325765969734421}, {
           0.5665511931890036, -0.9325765969734421}, {
           0.5665511931890036, -0.8993010003789406}, {
           0.5665511931890036, -0.8327498071899375}, {
           0.5665511931890036, -0.799474210595436}, {
           0.5332755965945021, -0.799474210595436}, {
           0.46672440340549903`, -0.799474210595436}, {
           0.4334488068109975, -0.799474210595436}, {
           0.4334488068109975, -0.8327498071899375}, {
           0.4334488068109975, -0.8993010003789406}, {
           0.4334488068109975, -0.9325765969734421}, {
           0.46672440340549903`, -0.9325765969734421}}}], "DynamicName", 
          BoxID -> "VertexID$7"], 
         InsetBox[
          FormBox["7", TraditionalForm], 
          DynamicLocation["VertexID$7", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$7"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           0.8327498071899374, -0.5665511931890043}, {
           0.8993010003789405, -0.5665511931890043}, {
           0.932576596973442, -0.5665511931890043}, {
           0.932576596973442, -0.5332755965945027}, {
           0.932576596973442, -0.4667244034054997}, {
           0.932576596973442, -0.4334488068109982}, {
           0.8993010003789405, -0.4334488068109982}, {
           0.8327498071899374, -0.4334488068109982}, {
           0.7994742105954359, -0.4334488068109982}, {
           0.7994742105954359, -0.4667244034054997}, {
           0.7994742105954359, -0.5332755965945027}, {
           0.7994742105954359, -0.5665511931890043}, {
           0.8327498071899374, -0.5665511931890043}}}], "DynamicName", BoxID -> 
          "VertexID$8"], 
         InsetBox[
          FormBox["8", TraditionalForm], 
          DynamicLocation["VertexID$8", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$8"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           0.9667244034054985, -0.06655119318900415}, {
           1.0332755965945015`, -0.06655119318900415}, {
           1.066551193189003, -0.06655119318900415}, {
           1.066551193189003, -0.03327559659450264}, {1.066551193189003, 
           0.03327559659450038}, {1.066551193189003, 0.06655119318900188}, {
           1.0332755965945015`, 0.06655119318900188}, {0.9667244034054985, 
           0.06655119318900188}, {0.933448806810997, 0.06655119318900188}, {
           0.933448806810997, 0.03327559659450038}, {
           0.933448806810997, -0.03327559659450264}, {
           0.933448806810997, -0.06655119318900415}, {
           0.9667244034054985, -0.06655119318900415}}}], "DynamicName", BoxID -> 
          "VertexID$9"], 
         InsetBox[
          FormBox["9", TraditionalForm], 
          DynamicLocation["VertexID$9", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$9"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{0.8327498071899369, 
           0.4334488068109963}, {0.8993010003789399, 0.4334488068109963}, {
           0.9325765969734414, 0.4334488068109963}, {0.9325765969734414, 
           0.46672440340549776`}, {0.9325765969734414, 0.5332755965945007}, {
           0.9325765969734414, 0.5665511931890023}, {0.8993010003789399, 
           0.5665511931890023}, {0.8327498071899369, 0.5665511931890023}, {
           0.7994742105954353, 0.5665511931890023}, {0.7994742105954353, 
           0.5332755965945007}, {0.7994742105954353, 0.46672440340549776`}, {
           0.7994742105954353, 0.4334488068109963}, {0.8327498071899369, 
           0.4334488068109963}}}], "DynamicName", BoxID -> "VertexID$10"], 
         InsetBox[
          FormBox["10", TraditionalForm], 
          DynamicLocation["VertexID$10", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$10"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{0.4667244034054981, 
           0.7994742105954349}, {0.5332755965945011, 0.7994742105954349}, {
           0.5665511931890026, 0.7994742105954349}, {0.5665511931890026, 
           0.8327498071899364}, {0.5665511931890026, 0.8993010003789395}, {
           0.5665511931890026, 0.932576596973441}, {0.5332755965945011, 
           0.932576596973441}, {0.4667244034054981, 0.932576596973441}, {
           0.4334488068109966, 0.932576596973441}, {0.4334488068109966, 
           0.8993010003789395}, {0.4334488068109966, 0.8327498071899364}, {
           0.4334488068109966, 0.7994742105954349}, {0.4667244034054981, 
           0.7994742105954349}}}], "DynamicName", BoxID -> "VertexID$11"], 
         InsetBox[
          FormBox["11", TraditionalForm], 
          DynamicLocation["VertexID$11", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$11"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{-0.03327559659450133, 
           0.933448806810997}, {0.03327559659450169, 0.933448806810997}, {
           0.0665511931890032, 0.933448806810997}, {0.0665511931890032, 
           0.9667244034054985}, {0.0665511931890032, 1.0332755965945015`}, {
           0.0665511931890032, 1.066551193189003}, {0.03327559659450169, 
           1.066551193189003}, {-0.03327559659450133, 
           1.066551193189003}, {-0.06655119318900284, 
           1.066551193189003}, {-0.06655119318900284, 
           1.0332755965945015`}, {-0.06655119318900284, 
           0.9667244034054985}, {-0.06655119318900284, 
           0.933448806810997}, {-0.03327559659450133, 0.933448806810997}}}], 
          "DynamicName", BoxID -> "VertexID$12"], 
         InsetBox[
          FormBox["12", TraditionalForm], 
          DynamicLocation["VertexID$12", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> 
        "VertexLabelID$12"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{3.760693309010094, 
       355.2393066909899}, {-178.2393066909899, 173.2393066909899}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]]]], "Output"]
}, Open  ]],

Cell[TextData[{
 "Most included graph creation functions implement random graph models. These \
use igraph\[CloseCurlyQuote]s (not ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s) random number generator, which can be re-seeded using ",
 Cell[BoxData[
  FormBox[
   RowBox[{"IGSeedRandom", "[", "]"}], TraditionalForm]]],
 "."
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Structural properties", "Section"],

Cell[CellGroupData[{

Cell["Betwenness centrality", "Subsection"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"IGBetwenness", "[", "]"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"IGBetwennessEstimate", "[", "]"}], TraditionalForm]]],
 " have a ",
 Cell[BoxData[
  FormBox["\"\<UseBigInt\>\"", TraditionalForm]]],
 " option, set to ",
 Cell[BoxData[
  FormBox["True", TraditionalForm]]],
 " by default."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", "IGBetweenness", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"UseBigInt\"\>", "\[Rule]", "True"}], "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "Setting this to False will speed up betweenness calculation significantly \
but it may give incorrect results for large graphs with lots of symmetries \
such as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"GridGraph", "[", 
    RowBox[{"{", 
     RowBox[{"40", ",", "40"}], "}"}], "]"}], TraditionalForm]]],
 ", due to integer overflow."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Topological sorting and acylic graphs", "Subsection"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"IGFeedbackArcSet", "[", "]"}], TraditionalForm]]],
 " returns a set of edges the removal of which makes the graph acylic. With \
",
 Cell[BoxData[
  FormBox[
   RowBox[{"\"\<Exact\>\"", "\[Rule]", "True"}], TraditionalForm]]],
 " it finds a minimal feedback arc set. With ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\"\<Exact\>\"", "\[Rule]", "False"}], TraditionalForm]]],
 " it finds a feedback arc set (not necessarily minimal) using the heuristic \
of Eades, Lin and Smyth (1993)."
}], "Text"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Isomorphism", "Section"],

Cell[TextData[{
 "igraph implements three isomorphism testing algorithms: BLISS, VF2 and LAD. \
These support slightly different functionality. Most of IGraph/M\
\[CloseCurlyQuote]s isomorphism related functions include the name of the \
algorithm as a prefix, e.g. ",
 Cell[BoxData[
  FormBox["IGBlissIsomorphicQ", TraditionalForm]]],
 ". The exceptions are ",
 Cell[BoxData[
  FormBox[
   RowBox[{"IGIsomorphicQ", "[", "]"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"IGSubisomorphicQ", "[", "]"}], TraditionalForm]]],
 " which use igraph\[CloseCurlyQuote]s default (VF2 in the current \
implementation)."
}], "Text"],

Cell[TextData[{
 "Functions named as ",
 Cell[BoxData[
  FormBox["\[Ellipsis]GetIsomorphism", TraditionalForm]]],
 " will find a single isomorphism. Functions names as ",
 Cell[BoxData[
  FormBox["\[Ellipsis]FindIsomorphisms", TraditionalForm]]],
 " can find multiple isomorphisms. Both return a result in a format \
compatible with the builtin ",
 Cell[BoxData[
  FormBox["FindGraphIsomorphism", TraditionalForm]]],
 "."
}], "Text"],

Cell[CellGroupData[{

Cell["BLISS", "Subsection"],

Cell[TextData[{
 "See ",
 ButtonBox["http://www.tcs.hut.fi/Software/bliss/",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.tcs.hut.fi/Software/bliss/"], None},
  ButtonNote->"http://www.tcs.hut.fi/Software/bliss/"],
 " and ",
 ButtonBox["http://igraph.org/c/doc/igraph-Isomorphism.html#idm470920858320",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://igraph.org/c/doc/igraph-Isomorphism.html#idm470920858320"], 
    None},
  ButtonNote->
   "http://igraph.org/c/doc/igraph-Isomorphism.html#idm470920858320"]
}], "Text"],

Cell["The current implementation only supports undirected graphs.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGBliss*"}]], "Input"],

Cell[BoxData[
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["IGraphM`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["IGraphM`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["IGBlissAutomorphismCount",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-7fdb2cae-b03b-44d7-8223-96adc801506c", {
            "IGBlissAutomorphismCount", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGBlissCanonicalLabeling",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-7fdb2cae-b03b-44d7-8223-96adc801506c", {
            "IGBlissCanonicalLabeling", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGBlissGetIsomorphism",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-7fdb2cae-b03b-44d7-8223-96adc801506c", {
            "IGBlissGetIsomorphism", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGBlissCanonicalGraph",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-7fdb2cae-b03b-44d7-8223-96adc801506c", {
            "IGBlissCanonicalGraph", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGBlissCanonicalPermutation",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-7fdb2cae-b03b-44d7-8223-96adc801506c", {
            "IGBlissCanonicalPermutation", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGBlissIsomorphicQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-7fdb2cae-b03b-44d7-8223-96adc801506c", {
            "IGBlissIsomorphicQ", "IGraphM`"}},
          ButtonNote->"IGraphM`"]}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.31666666666666665`]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]], "Print", "InfoCell"]
}, Open  ]],

Cell[TextData[{
 "Bliss functions take a ",
 Cell[BoxData[
  FormBox["\"\<SplittingHeuristics\>\"", TraditionalForm]]],
 " option, which can influence the performance of the method. Possible values \
are:"
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<First\>\"", TraditionalForm]]],
 " \[Dash] First non-unit cell. Very fast but may result in large search \
spaces on difficult graphs. Use for large but easy graphs."
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<FirstSmallest\>\"", TraditionalForm]]],
 " \[Dash] First smallest non-unit cell. Fast, should usually produce smaller \
search spaces than ",
 Cell[BoxData[
  FormBox["\"\<First\>\"", TraditionalForm]]],
 "."
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<FirstLargest\>\"", TraditionalForm]]],
 " \[Dash] First largest non-unit cell. Fast, should usually produce smaller \
search spaces than ",
 Cell[BoxData[
  FormBox["\"\<First\>\"", TraditionalForm]]],
 "."
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<FirstMaximallyConnected\>\"", TraditionalForm]]],
 " \[Dash] First maximally non-trivially connected non-unit cell. Not so \
fast, should usually produce smaller search spaces than than ",
 Cell[BoxData[
  FormBox["\"\<First\>\"", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox["\"\<FirstSmallest\>\"", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["\"\<FirstLargest\>\"", TraditionalForm]]],
 "."
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<FirstSmallestMaximallyConnected\>\"", TraditionalForm]]],
 " \[Dash] First smallest maximally non-trivially connected non-unit cell. \
Not so fast, should usually produce smaller search spaces than ",
 Cell[BoxData[
  FormBox["\"\<First\>\"", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox["\"\<FirstSmallest\>\"", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["\"\<FirstLargest\>\"", TraditionalForm]]],
 "."
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<FirstLargestMaximallyConnected\>\"", TraditionalForm]]],
 " \[Dash] First largest maximally non-trivially connected non-unit cell. Not \
so fast, should usually produce smaller search spaces than ",
 Cell[BoxData[
  FormBox["\"\<First\>\"", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox["\"\<FirstSmallest\>\"", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["\"\<FirstLargest\>\"", TraditionalForm]]],
 "."
}], "Item"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Note:",
  FontWeight->"Bold"],
 " The result of the ",
 Cell[BoxData[
  FormBox["IGBlissCanonicalLabeling", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox["IGBlissCanonicalPermutation", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["IGBlissanonicalGraph", TraditionalForm]]],
 " functions depend on the choice of ",
 Cell[BoxData[
  FormBox["\"\<SplittingHeuristics\>\"", TraditionalForm]]],
 ". See the ",
 ButtonBox["Bliss documentation",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.tcs.hut.fi/Software/bliss/doxy/classbliss_1_1Graph.html#\
a08da370e34106cd7db479eca7c7375cc"], None},
  ButtonNote->
   "http://www.tcs.hut.fi/Software/bliss/doxy/classbliss_1_1Graph.html#\
a08da370e34106cd7db479eca7c7375cc"],
 " for more information. "
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["VF2", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGVF2*"}]], "Input"],

Cell[BoxData[
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["IGraphM`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["IGraphM`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["IGVF2AutomorphismCount",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-948e6e79-8736-42da-92f9-aec195905ea2", {
            "IGVF2AutomorphismCount", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGVF2FindSubisomorphisms",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-948e6e79-8736-42da-92f9-aec195905ea2", {
            "IGVF2FindSubisomorphisms", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGVF2IsomorphismCount",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-948e6e79-8736-42da-92f9-aec195905ea2", {
            "IGVF2IsomorphismCount", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGVF2SubisomorphismCount",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-948e6e79-8736-42da-92f9-aec195905ea2", {
            "IGVF2SubisomorphismCount", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGVF2FindIsomorphisms",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-948e6e79-8736-42da-92f9-aec195905ea2", {
            "IGVF2FindIsomorphisms", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGVF2IsomorphicQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-948e6e79-8736-42da-92f9-aec195905ea2", {
            "IGVF2IsomorphicQ", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGVF2SubisomorphicQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-948e6e79-8736-42da-92f9-aec195905ea2", {
            "IGVF2SubisomorphicQ", "IGraphM`"}},
          ButtonNote->"IGraphM`"], ""}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.2375]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]], "Print", "InfoCell"]
}, Open  ]],

Cell[TextData[{
 "VF2 supports vertex coloured and edge coloured graphs. Colours can be \
provided as a pair of integer lists using the ",
 Cell[BoxData[
  FormBox["\"\<VertexColors\>\"", TraditionalForm]]],
 " or ",
 Cell[BoxData[
  FormBox["\"\<EdgeColors\>\"", TraditionalForm]]],
 " options."
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["LAD", "Subsection"],

Cell[TextData[{
 "See ",
 ButtonBox["http://liris.cnrs.fr/csolnon/LAD.html",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://liris.cnrs.fr/csolnon/LAD.html"], None},
  ButtonNote->"http://liris.cnrs.fr/csolnon/LAD.html"],
 " and ",
 ButtonBox["http://igraph.org/c/doc/igraph-Isomorphism.html#idm470934622128",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://igraph.org/c/doc/igraph-Isomorphism.html#idm470934622128"], 
    None},
  ButtonNote->
   "http://igraph.org/c/doc/igraph-Isomorphism.html#idm470934622128"]
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGLAD*"}]], "Input"],

Cell[BoxData[
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["IGraphM`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["IGraphM`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["IGLADGetSubisomorphism",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-08f6069f-2cc8-419d-9056-425d70c82072", {
            "IGLADGetSubisomorphism", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLADSubisomorphicQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-08f6069f-2cc8-419d-9056-425d70c82072", {
            "IGLADSubisomorphicQ", "IGraphM`"}},
          ButtonNote->"IGraphM`"]}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.475]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]], "Print", "InfoCell"]
}, Open  ]],

Cell[TextData[{
 "With the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\"\<Induced\>\"", "\[Rule]", "True"}], TraditionalForm]]],
 " option LAD will search for induced subgraphs."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGLADSubisomorphicQ", "[", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3}, {Null, {{1, 2}, {2, 3}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 3.6739403974420594`*^-16}, {1., 
         2.4492935982947064`*^-16}, {2., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.02261146496815286]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.02261146496815286]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
           DiskBox[3, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]]], ",", " ", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3}, {Null, 
         SparseArray[
         Automatic, {3, 3}, 0, {
          1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}]}, {
        GraphLayout -> "CircularEmbedding"}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-0.8660254037844384, -0.4999999999999994}, {
         0.8660254037844389, -0.5000000000000012}, {1.8369701987210297`*^-16, 
         1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.020399597244776385`]}, 
           {Arrowheads[0.], ArrowBox[{1, 3}, 0.020399597244776385`]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.020399597244776385`]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]]]}], "]"}]], "Input"],

Cell[BoxData["True"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGLADSubisomorphicQ", "[", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3}, {Null, {{1, 2}, {2, 3}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 3.6739403974420594`*^-16}, {1., 
         2.4492935982947064`*^-16}, {2., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.02261146496815286]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.02261146496815286]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
           DiskBox[3, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]]], ",", " ", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3}, {Null, 
         SparseArray[
         Automatic, {3, 3}, 0, {
          1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}]}, {
        GraphLayout -> "CircularEmbedding"}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-0.8660254037844384, -0.4999999999999994}, {
         0.8660254037844389, -0.5000000000000012}, {1.8369701987210297`*^-16, 
         1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.020399597244776385`]}, 
           {Arrowheads[0.], ArrowBox[{1, 3}, 0.020399597244776385`]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.020399597244776385`]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]]], ",", 
   RowBox[{"\"\<Induced\>\"", "\[Rule]", "True"}]}], "]"}]], "Input"],

Cell[BoxData["False"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGLADSubisomorphicQ", "[", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3}, {Null, {{1, 2}, {2, 3}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 3.6739403974420594`*^-16}, {1., 
         2.4492935982947064`*^-16}, {2., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.02261146496815286]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.02261146496815286]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
           DiskBox[3, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]]], ",", " ", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4}, {Null, 
         SparseArray[
         Automatic, {4, 4}, 0, {
          1, {{0, 3, 5, 8, 10}, {{2}, {3}, {4}, {1}, {3}, {1}, {2}, {4}, {
            3}, {1}}}, Pattern}]}, {
        GraphLayout -> "CircularEmbedding", GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]]}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-1., 1.0106430996148606`*^-15}, {
         6.049014748177263*^-16, -1.}, {
         1., -1.133107779529596*^-15}, {-7.044813998280222*^-16, 1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.02261146496815286]}, 
           {Arrowheads[0.], ArrowBox[{1, 3}, 0.02261146496815286]}, 
           {Arrowheads[0.], ArrowBox[{1, 4}, 0.02261146496815286]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.02261146496815286]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.02261146496815286]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
           DiskBox[3, 0.02261146496815286], 
           DiskBox[4, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]]], ",", 
   RowBox[{"\"\<Induced\>\"", "\[Rule]", "True"}]}], "]"}]], "Input"],

Cell[BoxData["True"], "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Layout algorithms", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGLayout*"}]], "Input"],

Cell[BoxData[
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["IGraphM`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["IGraphM`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["IGLayoutCircle",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-07cac4e1-972f-41b4-9f56-a303329b9110", {
            "IGLayoutCircle", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutGraphOpt",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-07cac4e1-972f-41b4-9f56-a303329b9110", {
            "IGLayoutGraphOpt", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutRandom",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-07cac4e1-972f-41b4-9f56-a303329b9110", {
            "IGLayoutRandom", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGLayoutFruchtermanReingold",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-07cac4e1-972f-41b4-9f56-a303329b9110", {
            "IGLayoutFruchtermanReingold", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutKamadaKawai",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-07cac4e1-972f-41b4-9f56-a303329b9110", {
            "IGLayoutKamadaKawai", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutSphere",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-07cac4e1-972f-41b4-9f56-a303329b9110", {
            "IGLayoutSphere", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGLayoutFruchtermanReingold3D",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-07cac4e1-972f-41b4-9f56-a303329b9110", {
            "IGLayoutFruchtermanReingold3D", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutKamadaKawai3D",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info-07cac4e1-972f-41b4-9f56-a303329b9110", {
            "IGLayoutKamadaKawai3D", "IGraphM`"}},
          ButtonNote->"IGraphM`"], ""}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.31666666666666665`]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]], "Print", "InfoCell"]
}, Open  ]],

Cell[TextData[{
 "Most layout algorithms take a ",
 Cell[BoxData[
  FormBox["\"\<MaxIterations\>\"", TraditionalForm]]],
 " option. This controls either the ",
 StyleBox["maximum",
  FontSlant->"Italic"],
 " number of iterations performed by the algorithm or the ",
 StyleBox["exact",
  FontSlant->"Italic"],
 " number of iterations, depending on the specific algorithm and settings. \
The option name is the same for all functions to make it easier to \
interchange them when visualizing dynamic graphs."
}], "Text"],

Cell[TextData[{
 "Many layout algorithms can take the existing vertex coordinates as starting \
points. This is controlled by the ",
 Cell[BoxData[
  FormBox["\"\<Continue\>\"", TraditionalForm]]],
 " option. We can use this to visualize how the layout algorithms work \
\[Ellipsis]"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"IGLayoutRandom", "@", 
    RowBox[{"RandomGraph", "[", 
     RowBox[{"BarabasiAlbertGraphDistribution", "[", 
      RowBox[{"100", ",", "1"}], "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{"ListAnimate", "@", 
  RowBox[{"NestList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"IGLayoutGraphOpt", "[", 
      RowBox[{"#", ",", 
       RowBox[{"\"\<Continue\>\"", "\[Rule]", "True"}], ",", 
       RowBox[{"\"\<MaxIterations\>\"", "\[Rule]", "80"}]}], "]"}], "&"}], 
    ",", "g", ",", "40"}], "]"}]}]}], "Input"],

Cell["\<\
\[Ellipsis] or to visualize dynamic graph processes such as adding edges to \
the graph one by one:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"IGLayoutKamadaKawai", "@", 
    RowBox[{"Graph", "[", 
     RowBox[{
      RowBox[{"Range", "[", "25", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "25"}], "}"}], ",", 
      RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{"ListAnimate", "@", 
  RowBox[{"NestList", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"IGLayoutKamadaKawai", "[", 
      RowBox[{
       RowBox[{"EdgeAdd", "[", 
        RowBox[{"#", ",", 
         RowBox[{"UndirectedEdge", "@@", 
          RowBox[{"RandomSample", "[", 
           RowBox[{
            RowBox[{"VertexList", "[", "#", "]"}], ",", "2"}], "]"}]}]}], 
        "]"}], ",", 
       RowBox[{"\"\<MaxIterations\>\"", "\[Rule]", "15"}], ",", 
       RowBox[{"\"\<Continue\>\"", "\[Rule]", "True"}]}], "]"}], "&"}], ",", 
    "\[IndentingNewLine]", "g", ",", "\[IndentingNewLine]", "30"}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Notes on other functions", "Section"],

Cell[CellGroupData[{

Cell["Random number generator", "Subsection"],

Cell["igraph\[CloseCurlyQuote]s random number generator can be seeded using", \
"Text"],

Cell[BoxData[
 RowBox[{"IGSeedRandom", "[", "123", "]"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGData[]", "Subsection"],

Cell["\<\
The IGData[] function provides access to various useful datasets. In \
particular, it can list small directed graphs ordered based on their \
IGIsoclass[], i.e. the same order motif counting functions use.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGData", "[", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"AllDirectedGraphs\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AllDirectedGraphs\"\>", ",", "4"}], "}"}], 
   ",", "\<\"MANTriadLabels\"\>"}], "}"}]], "Output"]
}, Open  ]],

Cell["Here\[CloseCurlyQuote]s all size 3 directed graphs.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "@", 
  RowBox[{"IGData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<AllDirectedGraphs\>\"", ",", "3"}], "}"}], "]"}]}]], "Input"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {}, {
          GraphLayout -> {"Dimension" -> 2}, 
           VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.8660254037844386, -0.5}, {0., 
         1.}, {-0.8660254037844386, -0.5}}, {{}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {FrameTicks -> None, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}],GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {1, {{0, 0, 0, 1}, {{2}}}, Pattern}], 
           Null}, {GraphLayout -> {"Dimension" -> 2}, 
           VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.8660254037844386, -0.5}, {0., 
         1.}, {-0.8660254037844386, -0.5}}, {{
           Arrowheads[0.03555748430834104], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           ArrowBox[{3, 2}, 0.020399597244776385`]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {FrameTicks -> None, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}],GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {1, {{0, 0, 1, 2}, {{1}, {1}}}, Pattern}], 
           Null}, {GraphLayout -> {"Dimension" -> 2}, 
           VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.8660254037844386, -0.5}, {0., 
         1.}, {-0.8660254037844386, -0.5}}, {{
           Arrowheads[0.03555748430834104], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           ArrowBox[{2, 1}, 0.020399597244776385`], 
           ArrowBox[{3, 1}, 0.020399597244776385`]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {FrameTicks -> None, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}],GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {1, {{0, 0, 1, 2}, {{3}, {2}}}, Pattern}], 
           Null}, {GraphLayout -> {"Dimension" -> 2}, 
           VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[CompressedData["
1:eJwBQQK+/SFib1JlAgAAACMAAAACAAAAqkxY6Hq26z8AAAAAAADgvwAAAAAA
AAAAAAAAAAAA8D+qTFjoerbrvwAAAAAAAOC/8ApFxdVwor+00kdL9+fpP9DP
PPEqsqe/nYX4Vlhf6D9QAQt49x+uv4H7OII42+Y/8Fehczbbsr/yayWafVzl
P5ibcpOGOLe/CGc7Ogrk4z8InCqRViW8v65OLka9cuI/VGvt9V3PwL+RWe9l
cQnhP8xR+XK80MO/moRuCPlR3z+B2RTg+QngvxyH33e1Uby/2S9nkQrb4L8A
pVOND4TDvw5DLYxYvOG/2p6Wy3m1yL9wpVdqXq3ivyCsgVcGus2/QLled42t
478cvypRXkfRvyDswAROvOS/FC8NOGCY079WidHD/9jlv0SAlcSpztW/fvai
JPoC579xzfys6+jXv/37A4xtj+q/Z6WPlu7P07+vf0Q5WDvqvzYL8a2wvtC/
l5zXcHvU6b/87eMI4mzLv64h5BkUW+m/yK+VaPZxxb85+ekVas/ovzg429FR
IL+/KvkyFtAx6L9odXIx6pWzv9jx3Gqjgue/AJn1XhaXoL85+JnLS8LmvwBt
L/LewIU/VOaGEAJZ17/k8PuuNorjP6Y54q3gttW/QOlU4wPh5D88E1a4RPTT
v7en5XJeLeY/eE4B/DgS0r8Ja+CVgW7nP9gm8+HaEdC/jl+VKK+j6D8wgl2O
s+jLv4qXBhwwzOk/UA0bkux1x78iwEriVOfqP7hY1Q4DzsK/uWZ+1nX06z90
tjFE
         "], {{
           Arrowheads[0.03555748430834104], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           ArrowBox[
            
            BezierCurveBox[{
             2, {-0.18635158111754604`, 0.10759013552211057`}, 3}], 
            0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             3, {-0.6796738226668945, 0.39240986447788667`}, 2}], 
            0.020399597244776385`]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {FrameTicks -> None, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}],GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {1, {{0, 0, 1, 2}, {{3}, {1}}}, Pattern}], 
           Null}, {GraphLayout -> {"Dimension" -> 2}, 
           VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.8660254037844386, -0.5}, {0., 
         1.}, {-0.8660254037844386, -0.5}}, {{
           Arrowheads[0.03555748430834104], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           ArrowBox[{{2, 3}, {3, 1}}, 0.020399597244776385`]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {FrameTicks -> None, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}],GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {
            1, {{0, 1, 2, 3}, {{3}, {3}, {2}}}, Pattern}], Null}, {
          GraphLayout -> {"Dimension" -> 2}, 
           VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[CompressedData["
1:eJwBQQK+/SFib1JlAgAAACMAAAACAAAAqkxY6Hq26z8AAAAAAADgvwAAAAAA
AAAAAAAAAAAA8D+qTFjoerbrvwAAAAAAAOC/8ApFxdVwor+00kdL9+fpP9DP
PPEqsqe/nYX4Vlhf6D9QAQt49x+uv4H7OII42+Y/8Fehczbbsr/yayWafVzl
P5ibcpOGOLe/CGc7Ogrk4z8InCqRViW8v65OLka9cuI/VGvt9V3PwL+RWe9l
cQnhP8xR+XK80MO/moRuCPlR3z+B2RTg+QngvxyH33e1Uby/2S9nkQrb4L8A
pVOND4TDvw5DLYxYvOG/2p6Wy3m1yL9wpVdqXq3ivyCsgVcGus2/QLled42t
478cvypRXkfRvyDswAROvOS/FC8NOGCY079WidHD/9jlv0SAlcSpztW/fvai
JPoC579xzfys6+jXv/37A4xtj+q/Z6WPlu7P07+vf0Q5WDvqvzYL8a2wvtC/
l5zXcHvU6b/87eMI4mzLv64h5BkUW+m/yK+VaPZxxb85+ekVas/ovzg429FR
IL+/KvkyFtAx6L9odXIx6pWzv9jx3Gqjgue/AJn1XhaXoL85+JnLS8LmvwBt
L/LewIU/VOaGEAJZ17/k8PuuNorjP6Y54q3gttW/QOlU4wPh5D88E1a4RPTT
v7en5XJeLeY/eE4B/DgS0r8Ja+CVgW7nP9gm8+HaEdC/jl+VKK+j6D8wgl2O
s+jLv4qXBhwwzOk/UA0bkux1x78iwEriVOfqP7hY1Q4DzsK/uWZ+1nX06z90
tjFE
         "], {{
           Arrowheads[0.03555748430834104], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           ArrowBox[{1, 3}, 0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             2, {-0.18635158111754604`, 0.10759013552211057`}, 3}], 
            0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             3, {-0.6796738226668945, 0.39240986447788667`}, 2}], 
            0.020399597244776385`]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {FrameTicks -> None, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}],GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {1, {{0, 0, 0, 2}, {{1}, {2}}}, Pattern}], 
           Null}, {GraphLayout -> {"Dimension" -> 2}, 
           VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.8660254037844386, -0.5}, {0., 
         1.}, {-0.8660254037844386, -0.5}}, {{
           Arrowheads[0.03555748430834104], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           ArrowBox[{{3, 1}, {3, 2}}, 0.020399597244776385`]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {FrameTicks -> None, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}],GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {
            1, {{0, 0, 1, 3}, {{1}, {1}, {2}}}, Pattern}], Null}, {
          GraphLayout -> {"Dimension" -> 2}, 
           VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.8660254037844386, -0.5}, {0., 
         1.}, {-0.8660254037844386, -0.5}}, {{
           Arrowheads[0.03555748430834104], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           ArrowBox[{2, 1}, 0.020399597244776385`], 
           ArrowBox[{3, 1}, 0.020399597244776385`], 
           ArrowBox[{3, 2}, 0.020399597244776385`]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {FrameTicks -> None, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}],GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {
            1, {{0, 1, 3, 4}, {{3}, {1}, {3}, {1}}}, Pattern}], Null}, {
          GraphLayout -> {"Dimension" -> 2}, 
           VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQvcon4kXVttf2DGDwYD8DCvhgD5XfD5M/tdTvxJvb
T+2Zpph11/E82h+2Z6/I3dgn9s1WQd1/2h/tZ7dx6PW79ciefc7Zmd8/PNpv
1/dqhVrQQ/uZn/P7DN0f7/+2+JL+7J779n+Zl0aXdz3eL3KfvyQ6/449a+R2
nYW7Hu9nWXVdPc3vpv3q/tTaSdcf75fkWts2Vfua/eR1R7SsHj7erwzh74fx
+SHq98PUy0HM2w8zj2EJ2L79MPucIe7ZPx3qHh6Ie/ezQd0bDfHP/kaofy5A
/LufAepfqP/3/7s+6SXT89sw/+//0xX9ku3DLZj/9385nnJGQO4WzP/7L0go
PJ5TeBPm//0cP7Z6CL6+AfP//h++E5ft7boB8//+NQ9MWG8H3ID5f/+dRWWr
um1vwPxvD+ND/W8PUw/1vz3MPKj/7WH2Qf1vfwXqHqj/7b9B3Qv1vz1DN8Q/
F2DxfQPiXwCosC5s
         "], {{
           Arrowheads[0.03555748430834104], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           ArrowBox[
            
            BezierCurveBox[{
             1, {7.298989890901527*^-16, -0.7848197289557521}, 3}], 
            0.020399597244776385`], 
           ArrowBox[{2, 1}, 0.020399597244776385`], 
           ArrowBox[{2, 3}, 0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             3, {-7.728342237425145*^-16, -0.21518027104424642`}, 1}], 
            0.020399597244776385`]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {FrameTicks -> None, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}],GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {
            1, {{0, 0, 1, 3}, {{3}, {1}, {2}}}, Pattern}], Null}, {
          GraphLayout -> {"Dimension" -> 2}, 
           VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[CompressedData["
1:eJwBQQK+/SFib1JlAgAAACMAAAACAAAAqkxY6Hq26z8AAAAAAADgvwAAAAAA
AAAAAAAAAAAA8D+qTFjoerbrvwAAAAAAAOC/8ApFxdVwor+00kdL9+fpP9DP
PPEqsqe/nYX4Vlhf6D9QAQt49x+uv4H7OII42+Y/8Fehczbbsr/yayWafVzl
P5ibcpOGOLe/CGc7Ogrk4z8InCqRViW8v65OLka9cuI/VGvt9V3PwL+RWe9l
cQnhP8xR+XK80MO/moRuCPlR3z+B2RTg+QngvxyH33e1Uby/2S9nkQrb4L8A
pVOND4TDvw5DLYxYvOG/2p6Wy3m1yL9wpVdqXq3ivyCsgVcGus2/QLled42t
478cvypRXkfRvyDswAROvOS/FC8NOGCY079WidHD/9jlv0SAlcSpztW/fvai
JPoC579xzfys6+jXv/37A4xtj+q/Z6WPlu7P07+vf0Q5WDvqvzYL8a2wvtC/
l5zXcHvU6b/87eMI4mzLv64h5BkUW+m/yK+VaPZxxb85+ekVas/ovzg429FR
IL+/KvkyFtAx6L9odXIx6pWzv9jx3Gqjgue/AJn1XhaXoL85+JnLS8LmvwBt
L/LewIU/VOaGEAJZ17/k8PuuNorjP6Y54q3gttW/QOlU4wPh5D88E1a4RPTT
v7en5XJeLeY/eE4B/DgS0r8Ja+CVgW7nP9gm8+HaEdC/jl+VKK+j6D8wgl2O
s+jLv4qXBhwwzOk/UA0bkux1x78iwEriVOfqP7hY1Q4DzsK/uWZ+1nX06z90
tjFE
         "], {{
           Arrowheads[0.03555748430834104], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           ArrowBox[
            
            BezierCurveBox[{
             2, {-0.18635158111754604`, 0.10759013552211057`}, 3}], 
            0.020399597244776385`], 
           ArrowBox[{3, 1}, 0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             3, {-0.6796738226668945, 0.39240986447788667`}, 2}], 
            0.020399597244776385`]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {FrameTicks -> None, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}],GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {
            1, {{0, 1, 2, 4}, {{3}, {3}, {1}, {2}}}, Pattern}], Null}, {
          GraphLayout -> {"Dimension" -> 2}, 
           VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[CompressedData["
1:eJxVkn9Q03UYx78OxYE/0FpeXpxhpXUrQ7qOG0h9uIOiy9wx4sa4xey6EA9S
YEVYndRI8Rq/Dmwiil1C0yI2Og1Rb/TmRE8uQAaIGxvF9v0O9gOsoQgsZmXu
+/mj5+65zz33PPc87/e9PpvfK8zIFTAMk/Ig/3tb31J4Pr0wTZiH4QDzv/AT
vg/a/1Uv7Z2xTxLB1/GVZatZyE1dot9yXOTLxIzK4BEWK5OSq6U2lqxsGmhc
8LN4tcb3/dYMJ2m8W1gTl8ZhvmU49mTVBLkfpleWajmIJqI+UhaOkxXZnS+c
vsxheavl2T3SMfJjbe7BeguHjZGGCt3zt8hR41VxopPD06EatI4KzYPObwrt
A93HfPfwHui9lJAeNPB6Vof0IpzXqwz5gYb3Yw75BcP79Ue+dm20qBk/D6ft
XHB7iXkwaVZ87ixOHV6UK3Z7SPqyVQcWnjRCsyQpl9iniD/r9Ifx9nO4U7Dl
xMF3Jsnxk+qjFZJOCPN2JEa6OCJsEtfJt5hglL74epeaJZkFt+/lDHajLvvP
3OIIJ+mXBdQmcw9OHNovDMgmiGZM5AhEOBB9ZKK0Q2bCWGxeXaT9ATf929VR
h3qwNmVblcLkhO2bY32fdPSiSJ+VrzKwiGnTZIVfHkDyJVVptYFDNMQyVdoQ
Yma6l0tNLohi10jePT4C+VdDPf9YJ5H6he7qDzdGUTbf/MxfAjeKB4Jt0x4L
5Y+/LfVegdtO+SOoVXrD/TbKH3PX3+9ft8lG+cP8eAzXVDxG+UO42PHG+mkr
5Y/FXXVnurRWyh9tjpdX2NOtlD/Gmz9urXzFSvkTWvP8CZ3n+RO6j+dP6D2e
P7nJ6+H5k3leL8+fMJUhP2b6360hv/eXwqr21fqQp6899sfgCNo/T01Q7PAh
ftWs4adfzGhoshR9dtOL4G1OyH7QB+Nm10aR0ovedt3e+eJrSAh4H8sf9EAi
sQ/JYgBx4KUN5jgP9pao43y687DOjue3lLvBNN5TbWj4FgmLjX07r0yB2Rd7
5/fuwyRzqmKdINsCl3/JGK/lyJkE1uC4MIpkbyYX5nSRpEflF1PnRtB5dlKt
2jZFDkiXBSWPDCOiwKHT7HcT69a7Ttt6M2p2655rb/GQ7eU5Nec9fdA2hEdv
7/eS9DVP1M+UXMdT3W+ymW4fuagYXRt24wou7Sm7VTI3Tf4FkkFP8g==
         "], {{
           Arrowheads[0.03555748430834104], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           ArrowBox[
            
            BezierCurveBox[{
             1, {7.298989890901527*^-16, -0.7848197289557521}, 3}], 
            0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             2, {-0.18635158111754604`, 0.10759013552211057`}, 3}], 
            0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             3, {-7.728342237425145*^-16, -0.21518027104424642`}, 1}], 
            0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             3, {-0.6796738226668945, 0.39240986447788667`}, 2}], 
            0.020399597244776385`]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {FrameTicks -> None, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}],GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {
            1, {{0, 1, 2, 3}, {{3}, {1}, {2}}}, Pattern}], Null}, {
          GraphLayout -> {"Dimension" -> 2}, 
           VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.8660254037844386, -0.5}, {0., 
         1.}, {-0.8660254037844386, -0.5}}, {{
           Arrowheads[0.03555748430834104], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           ArrowBox[{{1, 3}, {2, 1}, {3, 2}}, 0.020399597244776385`]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {FrameTicks -> None, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}],GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {
            1, {{0, 1, 2, 4}, {{3}, {1}, {1}, {2}}}, Pattern}], Null}, {
          GraphLayout -> {"Dimension" -> 2}, 
           VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQvcon4kXVttf2DGDwYD8DCvhgD5XfD5M/tdTvxJvb
T+2Zpph11/E82h+2Z6/I3dgn9s1WQd1/2h/tZ7dx6PW79ciefc7Zmd8/PNpv
1/dqhVrQQ/uZn/P7DN0f7/+2+JL+7J779n+Zl0aXdz3eL3KfvyQ6/449a+R2
nYW7Hu9nWXVdPc3vpv3q/tTaSdcf75fkWts2Vfua/eR1R7SsHj7erwzh74fx
+SHq98PUy0HM2w8zj2EJ2L79MPucIe7ZPx3qHh6Ie/ezQd0bDfHP/kaofy5A
/LufAepfqP/3/7s+6SXT89sw/+//0xX9ku3DLZj/9385nnJGQO4WzP/7L0go
PJ5TeBPm//0cP7Z6CL6+AfP//h++E5ft7boB8//+NQ9MWG8H3ID5f/+dRWWr
um1vwPxvD+ND/W8PUw/1vz3MPKj/7WH2Qf1vfwXqHqj/7b9B3Qv1vz1DN8Q/
F2DxfQPiXwCosC5s
         "], {{
           Arrowheads[0.03555748430834104], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           ArrowBox[
            
            BezierCurveBox[{
             1, {7.298989890901527*^-16, -0.7848197289557521}, 3}], 
            0.020399597244776385`], 
           ArrowBox[{2, 1}, 0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             3, {-7.728342237425145*^-16, -0.21518027104424642`}, 1}], 
            0.020399597244776385`], 
           ArrowBox[{3, 2}, 0.020399597244776385`]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {FrameTicks -> None, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}],GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {
            1, {{0, 0, 2, 4}, {{1}, {3}, {1}, {2}}}, Pattern}], Null}, {
          GraphLayout -> {"Dimension" -> 2}, 
           VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[CompressedData["
1:eJwBQQK+/SFib1JlAgAAACMAAAACAAAAqkxY6Hq26z8AAAAAAADgvwAAAAAA
AAAAAAAAAAAA8D+qTFjoerbrvwAAAAAAAOC/8ApFxdVwor+00kdL9+fpP9DP
PPEqsqe/nYX4Vlhf6D9QAQt49x+uv4H7OII42+Y/8Fehczbbsr/yayWafVzl
P5ibcpOGOLe/CGc7Ogrk4z8InCqRViW8v65OLka9cuI/VGvt9V3PwL+RWe9l
cQnhP8xR+XK80MO/moRuCPlR3z+B2RTg+QngvxyH33e1Uby/2S9nkQrb4L8A
pVOND4TDvw5DLYxYvOG/2p6Wy3m1yL9wpVdqXq3ivyCsgVcGus2/QLled42t
478cvypRXkfRvyDswAROvOS/FC8NOGCY079WidHD/9jlv0SAlcSpztW/fvai
JPoC579xzfys6+jXv/37A4xtj+q/Z6WPlu7P07+vf0Q5WDvqvzYL8a2wvtC/
l5zXcHvU6b/87eMI4mzLv64h5BkUW+m/yK+VaPZxxb85+ekVas/ovzg429FR
IL+/KvkyFtAx6L9odXIx6pWzv9jx3Gqjgue/AJn1XhaXoL85+JnLS8LmvwBt
L/LewIU/VOaGEAJZ17/k8PuuNorjP6Y54q3gttW/QOlU4wPh5D88E1a4RPTT
v7en5XJeLeY/eE4B/DgS0r8Ja+CVgW7nP9gm8+HaEdC/jl+VKK+j6D8wgl2O
s+jLv4qXBhwwzOk/UA0bkux1x78iwEriVOfqP7hY1Q4DzsK/uWZ+1nX06z90
tjFE
         "], {{
           Arrowheads[0.03555748430834104], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           ArrowBox[{2, 1}, 0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             2, {-0.18635158111754604`, 0.10759013552211057`}, 3}], 
            0.020399597244776385`], 
           ArrowBox[{3, 1}, 0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             3, {-0.6796738226668945, 0.39240986447788667`}, 2}], 
            0.020399597244776385`]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {FrameTicks -> None, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}],GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {
            1, {{0, 1, 3, 5}, {{3}, {1}, {3}, {1}, {2}}}, Pattern}], Null}, {
          GraphLayout -> {"Dimension" -> 2}, 
           VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[CompressedData["
1:eJxVkn9Q03UYx78OxYE/0FpeXpxhpXUrQ7qOG0h9uIOiy9wx4sa4xey6EA9S
YEVYndRI8Rq/Dmwiil1C0yI2Og1Rb/TmRE8uQAaIGxvF9v0O9gOsoQgsZmXu
+/mj5+65zz33PPc87/e9PpvfK8zIFTAMk/Ig/3tb31J4Pr0wTZiH4QDzv/AT
vg/a/1Uv7Z2xTxLB1/GVZatZyE1dot9yXOTLxIzK4BEWK5OSq6U2lqxsGmhc
8LN4tcb3/dYMJ2m8W1gTl8ZhvmU49mTVBLkfpleWajmIJqI+UhaOkxXZnS+c
vsxheavl2T3SMfJjbe7BeguHjZGGCt3zt8hR41VxopPD06EatI4KzYPObwrt
A93HfPfwHui9lJAeNPB6Vof0IpzXqwz5gYb3Yw75BcP79Ue+dm20qBk/D6ft
XHB7iXkwaVZ87ixOHV6UK3Z7SPqyVQcWnjRCsyQpl9iniD/r9Ifx9nO4U7Dl
xMF3Jsnxk+qjFZJOCPN2JEa6OCJsEtfJt5hglL74epeaJZkFt+/lDHajLvvP
3OIIJ+mXBdQmcw9OHNovDMgmiGZM5AhEOBB9ZKK0Q2bCWGxeXaT9ATf929VR
h3qwNmVblcLkhO2bY32fdPSiSJ+VrzKwiGnTZIVfHkDyJVVptYFDNMQyVdoQ
Yma6l0tNLohi10jePT4C+VdDPf9YJ5H6he7qDzdGUTbf/MxfAjeKB4Jt0x4L
5Y+/LfVegdtO+SOoVXrD/TbKH3PX3+9ft8lG+cP8eAzXVDxG+UO42PHG+mkr
5Y/FXXVnurRWyh9tjpdX2NOtlD/Gmz9urXzFSvkTWvP8CZ3n+RO6j+dP6D2e
P7nJ6+H5k3leL8+fMJUhP2b6360hv/eXwqr21fqQp6899sfgCNo/T01Q7PAh
ftWs4adfzGhoshR9dtOL4G1OyH7QB+Nm10aR0ovedt3e+eJrSAh4H8sf9EAi
sQ/JYgBx4KUN5jgP9pao43y687DOjue3lLvBNN5TbWj4FgmLjX07r0yB2Rd7
5/fuwyRzqmKdINsCl3/JGK/lyJkE1uC4MIpkbyYX5nSRpEflF1PnRtB5dlKt
2jZFDkiXBSWPDCOiwKHT7HcT69a7Ttt6M2p2655rb/GQ7eU5Nec9fdA2hEdv
7/eS9DVP1M+UXMdT3W+ymW4fuagYXRt24wou7Sm7VTI3Tf4FkkFP8g==
         "], {{
           Arrowheads[0.03555748430834104], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           ArrowBox[
            
            BezierCurveBox[{
             1, {7.298989890901527*^-16, -0.7848197289557521}, 3}], 
            0.020399597244776385`], 
           ArrowBox[{2, 1}, 0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             2, {-0.18635158111754604`, 0.10759013552211057`}, 3}], 
            0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             3, {-7.728342237425145*^-16, -0.21518027104424642`}, 1}], 
            0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             3, {-0.6796738226668945, 0.39240986447788667`}, 2}], 
            0.020399597244776385`]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {FrameTicks -> None, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}],GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {
            1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}], 
           Null}, {GraphLayout -> {"Dimension" -> 2}, 
           VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[CompressedData["
1:eJxV03tMU1ccwPErIALyckMzN6LoplvYGLIspDzcj0wmy3QNMAIlDDTbEAMq
j43BHqIwhYznwFVE2DJBdGM8FhwPTdmPCEYyQAqILS2TtrfQFtAVRWgHugfn
d//YTZrm5J7c8zvJ57vtg9TIRBuO4z789/fff8N+ifHz9lngVh8Ncv97zEDv
UXifvVj7wl82BkgeXGmcNSow8uvhnr+VU7D7pLT3p1tj+Oxct51YpgcXXxfR
wXOjGHQ1IaukiYeN6B2REDaMR+pjkhOadODemBtjf20Qnfb4FEtkWuj7/mz/
Z219OOabVO6k1sDcxfdK3E714IlxD43VUQOW/MmstggZ9kZYM2TyHqg9dczB
GjEJoSn3HsUPdYM09s/EdEctWKq9y6N3yKBV/OrergwdnKzOOJMv6gDnpKBA
Jz0PxpgLH/urW8GasuP88fenIHzN+uylrc2QvyzKE6mnQT4UPO/dehlqT1ui
JQeMoHF668ZYWi10joTtWzKY4Pd6cd+cegpsvvUvynHWYbSsy+OPeD18FRhZ
tFKgw3XBISVilQ7W1QxWLZl1+EbpzI87I7VQ9TC11C+Mx8W6Ed/q4kl4bFsf
l1XIo8ek2ydxqROwNrbjlQvXeLRrULx4SDwOP5clHq9Q8LjZqSlf+vIdONPc
6x2o5fF5tkZh7cb2o7B/C/seCt/jLq6eh8J5e9g8WEnzOLN50Z7mjWP3wVy6
j5zdFzm6b59kzNX21nVoP5RzJ3NhFg66PFcxl3kTtna/o4syzEBIXnzpFWM/
FFTae+4aMMHdnQ+1qg1yKDogfamlzghfitesiJ4aAbsUjTT3mAFCno7uDF0Y
hdbLUxkJPtPQEKBr0rSPQbApirfV6kEyne9uE6sAjXm52b+QhyBLVf++69Og
SfF9cLf7NKjmJ5Lr8gwQXvUoYVPlD+hjfW2T3M8I32Rm+M1Ir2Cw1bQxecgI
EpF6OMILsWWbfrNHnAkmWqSHF9NvYGWNIu2L2yZwvc876I70Y8uJ0ABJ0Ay8
uX6+6Zff5Phk2bb4aNkMpNeXnb0/NIpm5gF/JQ/kBb8jL+QJc8mTmXnDB+Tt
HPOIDuTRoWbVKzaT1yjmGcvJ8wDzjufJey7rAT0LWA/jrBfk6lkvrqwnVFFP
aaw39KLeQliP6Ek9erFe0YN6jWY9Yyj1nMN6x3TqnfzjE0WFycagFvzjSmGc
yd6sEvzjws2PBty3qAT/KH/Gi69JHxf8o4Ol7e0Ns0rBP1reLb/UVagU/GOj
5vW16nCl4B8naj9tKNqtFPyDsCb/IOwn/yB8j/yDcB75h9s0D/mHRZqX/ANX
xO4jF3pXsvs+Zh4wiTyQF/QnL+QJV+4xT83MG/aRtwDmEUXk0Zt5xcPkVck8
I0eeA5h35I4y71GsB9RTD5dYLxhCvQSznrCDespmvaEj9aZkPWIp9biL9YqF
1Gs46xm3U8+drHe8Sr3/A+4aZJQ=
         "], {{
           Arrowheads[0.03555748430834104], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           ArrowBox[
            
            BezierCurveBox[{
             1, {0.18635158111754768`, 0.10759013552212691`}, 2}], 
            0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             1, {7.298989890901527*^-16, -0.7848197289557521}, 3}], 
            0.020399597244776385`], 
           ArrowBox[
            BezierCurveBox[{2, {0.679673822666892, 0.3924098644779406}, 1}], 
            0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             2, {-0.18635158111754604`, 0.10759013552211057`}, 3}], 
            0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             3, {-7.728342237425145*^-16, -0.21518027104424642`}, 1}], 
            0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             3, {-0.6796738226668945, 0.39240986447788667`}, 2}], 
            0.020399597244776385`]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {FrameTicks -> None, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}]},
  "RowDefault"]], "Output"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<MANTriadLabels\>\"", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " refers to the mutual, asymmetric, null labelling of triads used by ",
 Cell[BoxData[
  FormBox[
   RowBox[{"IGTriadCensus", "[", "]"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". Each label is mapped to the corresponding graph, ordered based on their \
",
 Cell[BoxData[
  FormBox["IGIsoclass", TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". This is useful for converting the output of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"IGTriadCensus", "[", "]"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " to a format compatible with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"IGMotifs", "[", "]"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text"]
}, Closed]]
}, Closed]]
}, Open  ]]
},
WindowSize->{964, 659},
PrivateNotebookOptions->{"FileOutlineCache"->False},
TrackCellChangeTimes->False,
StyleDefinitions->"Default.nb"
]

